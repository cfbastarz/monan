Arquivo binário core_atmosphere/CodecheckResult.pdf coincide com o padrão
core_atmosphere/core_atmosphere.und/settings.xml:    use_preprocessor="true"
core_atmosphere/diagnostics/convective_diagnostics.F:    use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type, MPAS_LOG_ERR, MPAS_LOG_CRIT
core_atmosphere/diagnostics/convective_diagnostics.F:    use mpas_kind_types, only : RKIND
core_atmosphere/diagnostics/convective_diagnostics.F:    use mpas_log, only : mpas_log_write
core_atmosphere/diagnostics/convective_diagnostics.F:    !>  this routine saves pool pointers for use by
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type, MPAS_STREAM_OUTPUT, MPAS_STREAM_INPUT, &
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_subpool
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_atm_diagnostics_utils, only : mpas_stream_inclusion_count
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/convective_diagnostics.F:    !>  This routine computes several diagnostics used in Spring Experiment
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_atm_diagnostics_utils, only : MPAS_field_will_be_written
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_constants, only : rvord
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/convective_diagnostics.F:        ! Other fields used in the computation of convective diagnostics 
core_atmosphere/diagnostics/convective_diagnostics.F:            ! first the shear values.  We will use lowest model level velocity for surface velocity
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_atm_diagnostics_utils, only : MPAS_field_will_be_written
core_atmosphere/diagnostics/convective_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_array
core_atmosphere/diagnostics/convective_diagnostics.F:!  User options:
core_atmosphere/diagnostics/convective_diagnostics.F:    ! use surface parcel
core_atmosphere/diagnostics/convective_diagnostics.F:    ! use most unstable parcel (max theta-e)
core_atmosphere/diagnostics/convective_diagnostics.F:      ! first report is above 500 mb ... just use the first level reported
core_atmosphere/diagnostics/convective_diagnostics.F:    ! use mixed layer
core_atmosphere/diagnostics/convective_diagnostics.F:      ! the second level is above the mixed-layer depth:  just use the
core_atmosphere/diagnostics/convective_diagnostics.F:      ! the top-most level is within the mixed layer:  just use the
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_dmpar
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_kind_types
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_derived_types
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_pool_routines
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_constants
core_atmosphere/diagnostics/isobaric_diagnostics.F:    use mpas_log, only : mpas_log_write
core_atmosphere/diagnostics/isobaric_diagnostics.F:    !>  saving pointers to pools that are used in the computation of diagnostics.
core_atmosphere/diagnostics/isobaric_diagnostics.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/isobaric_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_subpool
core_atmosphere/diagnostics/isobaric_diagnostics.F:        use mpas_atm_diagnostics_utils, only : MPAS_field_will_be_written
core_atmosphere/diagnostics/isobaric_diagnostics.F:        integer, intent(in) :: time_lev              ! which time level to use from state
core_atmosphere/diagnostics/isobaric_diagnostics.F:           !use log of pressure to avoid occurrences of negative top-of-the-model pressure.
core_atmosphere/diagnostics/isobaric_diagnostics.F:      ! Find least zeta level that is PCONST Pa above the surface.  We later use this
core_atmosphere/diagnostics/isobaric_diagnostics.F:      ! Get temperature PCONST hPa above surface.  Use this to extrapolate
core_atmosphere/diagnostics/soundings.F:    use mpas_kind_types, only : RKIND, StrKIND
core_atmosphere/diagnostics/soundings.F:    use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/soundings.F:    use mpas_log, only : mpas_log_write
core_atmosphere/diagnostics/soundings.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type, dm_info
core_atmosphere/diagnostics/soundings.F:        use mpas_pool_routines, only : mpas_pool_get_subpool, mpas_pool_get_dimension, mpas_pool_get_array, mpas_pool_get_config
core_atmosphere/diagnostics/soundings.F:        use mpas_io_units, only :  mpas_new_unit, mpas_release_unit
core_atmosphere/diagnostics/soundings.F:        use mpas_timekeeping, only : MPAS_timeInterval_type, MPAS_time_type, MPAS_set_timeInterval, &
core_atmosphere/diagnostics/soundings.F:        use mpas_dmpar, only : IO_NODE, mpas_dmpar_bcast_int, mpas_dmpar_bcast_logical, mpas_dmpar_bcast_char
core_atmosphere/diagnostics/soundings.F:        use mpas_derived_types, only : MPAS_pool_type
core_atmosphere/diagnostics/soundings.F:        use mpas_pool_routines, only : MPAS_pool_get_dimension, MPAS_pool_get_array
core_atmosphere/diagnostics/soundings.F:        use mpas_timekeeping, only : MPAS_time_type, MPAS_is_alarm_ringing, MPAS_reset_clock_alarm, MPAS_get_clock_time, &
core_atmosphere/diagnostics/soundings.F:        use mpas_constants, only : rvord
core_atmosphere/diagnostics/soundings.F:    !> \brief Deallocates memory used to handle soundings
core_atmosphere/diagnostics/soundings.F:    !>  to release any allocated memory used in the storage of sounding
core_atmosphere/diagnostics/mpas_atm_diagnostic_template.F:    use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/mpas_atm_diagnostic_template.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/mpas_atm_diagnostic_template.F:        use mpas_pool_routines, only : mpas_pool_get_subpool
core_atmosphere/diagnostics/mpas_atm_diagnostic_template.F:        ! Also, save pointers to any pools that will be used by this diagnostic
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use mpas_atm_diagnostics_utils, only : mpas_atm_diag_utils_init
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use mpas_derived_types, only : MPAS_streamManager_type, MPAS_pool_type, MPAS_clock_type, dm_info
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use diagnostic_template, only : diagnostic_template_setup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use isobaric_diagnostics, only : isobaric_diagnostics_setup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use convective_diagnostics, only : convective_diagnostics_setup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use pv_diagnostics, only : pv_diagnostics_setup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use soundings, only : soundings_setup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        ! Prepare the diagnostics utilities module for later use by diagnostics
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use diagnostic_template, only : diagnostic_template_update
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use convective_diagnostics, only : convective_diagnostics_update
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use diagnostic_template, only : diagnostic_template_compute
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use isobaric_diagnostics, only : isobaric_diagnostics_compute
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use convective_diagnostics, only : convective_diagnostics_compute
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use pv_diagnostics, only : pv_diagnostics_compute
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use soundings, only : soundings_compute
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use diagnostic_template, only : diagnostic_template_reset
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use convective_diagnostics, only : convective_diagnostics_reset
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use mpas_atm_diagnostics_utils, only : mpas_atm_diag_utils_finalize
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use diagnostic_template, only : diagnostic_template_cleanup
core_atmosphere/diagnostics/mpas_atm_diagnostics_manager.F:        use soundings, only : soundings_cleanup
core_atmosphere/diagnostics/Registry_pv.xml:             description="Zonal wind on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Meridional wind on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Potential temperature on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Relative vertical vorticity on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Diabatic EPV tendency on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Frictional EPV tendency on dynamic tropopause"/>
core_atmosphere/diagnostics/Registry_pv.xml:             description="Lowest vertical level at or above dynamic tropopause (.lt.1 if 2 PVU below column; .gt.nLevels if 2PVU above column)"/>
core_atmosphere/diagnostics/README:to MPAS-Atmosphere. The "tempate" files may be used as a guide for what is
core_atmosphere/diagnostics/README:   module file may be used as a template.
core_atmosphere/diagnostics/pv_diagnostics.F:    use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/pv_diagnostics.F:    use mpas_kind_types, only : RKIND
core_atmosphere/diagnostics/pv_diagnostics.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type, MPAS_STREAM_OUTPUT, MPAS_STREAM_INPUT, &
core_atmosphere/diagnostics/pv_diagnostics.F:        use mpas_derived_types, only : MPAS_pool_type, MPAS_clock_type
core_atmosphere/diagnostics/pv_diagnostics.F:        use mpas_pool_routines, only : mpas_pool_get_subpool
core_atmosphere/diagnostics/pv_diagnostics.F:        use mpas_atm_diagnostics_utils, only : MPAS_field_will_be_written
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_constants, only : omega_e => omega
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_constants, only : omega_e => omega
core_atmosphere/diagnostics/pv_diagnostics.F:      !For finite volume computations, we'll use a normal pointing out of the cell
core_atmosphere/diagnostics/pv_diagnostics.F:      !since will find 2 pvu at a higher level than "tropopause". This looks to be worse as mesh gets finer and vertical vorticity jumps.
core_atmosphere/diagnostics/pv_diagnostics.F:      !and the resulting "flood-filled 2 pvu" can have sizeable areas that are just at the surface while there is clearly a tropopause above (e.g., in a cross-section).
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/pv_diagnostics.F:      !store whether each level above DT to avoid repeating logic. we'll use candInStrato as a isVisited marker further below.
core_atmosphere/diagnostics/pv_diagnostics.F:      !Fill iLev_DT with the lowest level above the tropopause (If DT above column, iLev>nVertLevels. If DT below column, iLev=0.
core_atmosphere/diagnostics/pv_diagnostics.F:      !since will find 2 pvu at a higher level than "tropopause". This looks to be worse as mesh gets finer and vertical vorticity jumps.
core_atmosphere/diagnostics/pv_diagnostics.F:      !     and the resulting "flood-filled 2 pvu" can have sizeable areas that are just at the surface while there is clearly a tropopause above (e.g., in a cross-section).
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array, mpas_pool_get_field
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_dmpar, only : mpas_dmpar_max_int,mpas_dmpar_exch_halo_field
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_derived_types, only : dm_info, field2DInteger
core_atmosphere/diagnostics/pv_diagnostics.F:      !store whether each level above DT to avoid repeating logic. we'll use cand as a isVisited marker further below.
core_atmosphere/diagnostics/pv_diagnostics.F:      !Fill iLev_DT with the lowest level above the tropopause (If DT above column, iLev>nVertLevels. If DT below column, iLev=0.
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/pv_diagnostics.F:      !using level above tropopause already diagnosed
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/pv_diagnostics.F:      integer, intent(in) :: time_lev            ! which time level to use from state
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_constants
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_derived_types, only : field2DReal
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array, mpas_pool_get_field
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_dmpar, only : mpas_dmpar_exch_halo_field
core_atmosphere/diagnostics/pv_diagnostics.F:      integer, intent(in) :: time_lev            ! which time level to use from state
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_vector_reconstruction
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array
core_atmosphere/diagnostics/pv_diagnostics.F:      integer, intent(in) :: time_lev            ! which time level to use from state
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_constants
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_derived_types, only : field2DReal
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_get_array, mpas_pool_get_field
core_atmosphere/diagnostics/pv_diagnostics.F:      use mpas_dmpar, only : mpas_dmpar_exch_halo_field
core_atmosphere/diagnostics/pv_diagnostics.F:      integer, intent(in) :: time_lev            ! which time level to use from state
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    use mpas_derived_types, only : MPAS_streamManager_type 
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    !> \brief Prepares diagnostics utilities for use by diagnostics modules
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    !>  This routine prepares the diagnostics utilities for use by diagnostics
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_derived_types, only : MPAS_streamManager_type
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    !> \brief Performs cleanup after diagnostics utilities will no longer be used
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    !>  longer be used
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_kind_types, only : StrKIND
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_derived_types, only : MPAS_STREAM_OUTPUT, MPAS_STREAM_INPUT_OUTPUT
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_stream_manager, only : mpas_stream_mgr_begin_iteration, mpas_stream_mgr_get_next_stream, &
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:    !>  used to limit the count to only input streams, only output streams, or
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_kind_types, only : StrKIND
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_derived_types, only : MPAS_STREAM_INPUT, MPAS_STREAM_OUTPUT, MPAS_STREAM_INPUT_OUTPUT, &
core_atmosphere/diagnostics/mpas_atm_diagnostics_utils.F:        use mpas_stream_manager, only : mpas_stream_mgr_begin_iteration, mpas_stream_mgr_get_next_stream, &
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_derived_types
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_pool_routines
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_kind_types
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_constants
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_dmpar
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_vector_reconstruction
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Added only clause to keep xlf90 from getting confused from the overloaded abs intrinsic in mpas_timekeeping
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_timekeeping, only: MPAS_Time_type, MPAS_TimeInterval_type, &
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_timer
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_atmphys_driver_microphysics
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_atmphys_todynamics
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_atmphys_utilities
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_atm_boundaries, only : nSpecZone, nRelaxZone, nBdyZone, mpas_atm_get_bdy_state, mpas_atm_get_bdy_tend  ! regional_MPAS addition
core_atmosphere/dynamics/mpas_atm_time_integration.F:   use mpas_atm_iau  
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used to store physics tendencies for dynamics variables
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used in compute_dyn_tend
core_atmosphere/dynamics/mpas_atm_time_integration.F:!   real (kind=RKIND), allocatable, dimension(:,:) :: delsq_circulation    ! no longer used -> removed 
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used in atm_advance_scalars
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used in atm_advance_scalars_mono
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used in compute_solve_diagnostics
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Used for Rayleigh damping on u
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! NB: We do not necessarily want this to vary with calendar, as it is used to set
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! If no physics are being used, simply zero-out the physics tendency fields
core_atmosphere/dynamics/mpas_atm_time_integration.F:!!               allocate(delsq_circulation(nVertLevels,nVertices+1))  ! no longer used -> removed 
core_atmosphere/dynamics/mpas_atm_time_integration.F:!!               deallocate(delsq_circulation)    ! no longer used -> removed 
core_atmosphere/dynamics/mpas_atm_time_integration.F:! This is the only communications needed during the acoustic steps because we solve for u on all edges of owned cells
core_atmosphere/dynamics/mpas_atm_time_integration.F:                  ! Note: The advance_scalars_mono routine can be used without limiting, and thus, encompasses 
core_atmosphere/dynamics/mpas_atm_time_integration.F:                  !       so we use the advance_scalars routine for the first two RK substeps.
core_atmosphere/dynamics/mpas_atm_time_integration.F:         !  (2) need to accumulate ruAvg and wwAvg over the dynamics substeps, prepare for use in transport
core_atmosphere/dynamics/mpas_atm_time_integration.F:               ! Note: The advance_scalars_mono routine can be used without limiting, and thus, encompasses 
core_atmosphere/dynamics/mpas_atm_time_integration.F:               !       so we use the advance_scalars routine for the first two RK substeps.
core_atmosphere/dynamics/mpas_atm_time_integration.F:!  would need to compute qtot for all cells and an openmp barrier to use qtot below.
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:         a_tri(1,iCell) = 0.  ! note, this value is never used
core_atmosphere/dynamics/mpas_atm_time_integration.F:         b_tri(1) = 1.    ! note, this value is never used
core_atmosphere/dynamics/mpas_atm_time_integration.F:         c_tri(1) = 0.    ! note, this value is never used
core_atmosphere/dynamics/mpas_atm_time_integration.F:         alpha_tri(1,iCell) = 0.  ! note, this value is never used
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! following Klemp et al MWR 2007, we use preturbation variables
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! this requires us to use the same flux divergence as is used in the theta eqn - see Klemp et al MWR 2003.
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:              ! accumulate ru_p for use later in scalar transport
core_atmosphere/dynamics/mpas_atm_time_integration.F:         ! accumulate (rho*omega)' for use later in scalar transport
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! Avoid FP errors caused by a potential division by zero below by 
core_atmosphere/dynamics/mpas_atm_time_integration.F:         !  to use the same flux-divergence operator as is used for the horizontal theta transport
core_atmosphere/dynamics/mpas_atm_time_integration.F:   !  (re-integrates) the density.  This re-integration allows the scalar transport routine to use a different 
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:   !  (re-integrates) the density.  This re-integration allows the scalar transport routine to use a different 
core_atmosphere/dynamics/mpas_atm_time_integration.F:   !   as used in the RK3 scheme as described in Wang et al MWR 2009
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:!TBH:  Michael, would you please check this change?  Our test uses -DDO_PHYSICS
core_atmosphere/dynamics/mpas_atm_time_integration.F:            ! scale_arr(SCALE_IN,:,:) and scale_arr(SCALE_OUT:,:) are used here to store the incoming and outgoing perturbation flux 
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! use in the atm_compute_dyn_tend_work routine
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! accumulate total water here for later use in w tendency calculation.
core_atmosphere/dynamics/mpas_atm_time_integration.F:            tend_u(k,iEdge) = - rdzw(k)*(wduz(k+1)-wduz(k)) !  first use of tend_u
core_atmosphere/dynamics/mpas_atm_time_integration.F:      !  first Runge-Kutta substep and saved for use in later RK substeps 2 and 3.
core_atmosphere/dynamics/mpas_atm_time_integration.F:                  !    stringent than the rotational part, and this flexibility may be useful.
core_atmosphere/dynamics/mpas_atm_time_integration.F:            ! flux_arr stores the value of w at the cell edge used in the horizontal transport
core_atmosphere/dynamics/mpas_atm_time_integration.F:!   array, and just use the delsq_theta array as was previously done; however,
core_atmosphere/dynamics/mpas_atm_time_integration.F:!   some threads may reach code further below that re-uses the delsq_theta array, 
core_atmosphere/dynamics/mpas_atm_time_integration.F:   ! Compute diagnostic fields used in the tendency computations
core_atmosphere/dynamics/mpas_atm_time_integration.F:      integer, intent(in) :: time_lev                   ! which time level of state to use
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:         ! *** approximation here because we don't have inner triangle areas
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! The tangential velocity is only used to compute the Smagorinsky coefficient
core_atmosphere/dynamics/mpas_atm_time_integration.F:         !   (tdr: 2009-10-02: this is not correct because the pv_cell in the halo is not correct)
core_atmosphere/dynamics/mpas_atm_time_integration.F:      integer, intent(in) :: time_lev                    ! which time level to use from state
core_atmosphere/dynamics/mpas_atm_time_integration.F:      ! We are reversing the procedure we use in subroutine atm_recover_large_step_variables.
core_atmosphere/dynamics/mpas_atm_time_integration.F:      use mpas_atm_dimensions
core_atmosphere/dynamics/mpas_atm_time_integration.F:       use ieee_arithmetic, only : ieee_is_nan
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_derived_types
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_pool_routines
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_kind_types
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_dmpar
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_constants   
core_atmosphere/dynamics/mpas_atm_iau.F: use mpas_log, only : mpas_log_write
core_atmosphere/dynamics/mpas_atm_boundaries.F:    use mpas_derived_types, only : mpas_pool_type, mpas_clock_type, block_type, mpas_time_type, mpas_timeInterval_type, MPAS_NOW, &
core_atmosphere/dynamics/mpas_atm_boundaries.F:    use mpas_pool_routines, only : mpas_pool_get_array, mpas_pool_get_dimension, mpas_pool_get_subpool, mpas_pool_shift_time_levels
core_atmosphere/dynamics/mpas_atm_boundaries.F:    use mpas_kind_types, only : RKIND, StrKIND
core_atmosphere/dynamics/mpas_atm_boundaries.F:    use mpas_timekeeping, only : mpas_get_clock_time, mpas_get_timeInterval, mpas_set_time, operator(-)
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_constants, only : rvord
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_stream_manager, only : mpas_stream_mgr_read
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_log, only : mpas_log_write
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_derived_types, only : MPAS_STREAM_MGR_NOERR, MPAS_LOG_ERR
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_timekeeping, only : mpas_get_time
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_pool_routines, only : mpas_pool_get_error_level, mpas_pool_set_error_level
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_derived_types, only : MPAS_POOL_SILENT
core_atmosphere/dynamics/mpas_atm_boundaries.F:        ! The first two calls to mpas_pool_get_array, below, may cause harmless warning
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_log, only : mpas_log_write
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_kind_types, only : StrKIND
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_derived_types, only : dm_info, block_type, mpas_pool_type, MPAS_LOG_ERR, MPAS_STREAM_PROPERTY_RECORD_INTV, &
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_stream_manager, only : mpas_stream_mgr_get_property
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_pool_routines, only : mpas_pool_get_config, mpas_pool_get_dimension, mpas_pool_get_subpool, mpas_pool_get_array
core_atmosphere/dynamics/mpas_atm_boundaries.F:        use mpas_dmpar, only : mpas_dmpar_max_int
core_atmosphere/dynamics/dynamics.und/settings.xml:    use_preprocessor="true"
Arquivo binário core_atmosphere/dynamics/CodecheckResult.pdf coincide com o padrão
core_atmosphere/mpas_atm_core.F:   use mpas_derived_types
core_atmosphere/mpas_atm_core.F:   use mpas_pool_routines
core_atmosphere/mpas_atm_core.F:   use mpas_dmpar
core_atmosphere/mpas_atm_core.F:   use mpas_log, only : mpas_log_write, mpas_log_info
core_atmosphere/mpas_atm_core.F:      use mpas_timekeeping
core_atmosphere/mpas_atm_core.F:      use mpas_kind_types
core_atmosphere/mpas_atm_core.F:      use mpas_stream_manager
core_atmosphere/mpas_atm_core.F:      use mpas_atm_dimensions, only : mpas_atm_set_dims
core_atmosphere/mpas_atm_core.F:      use mpas_atm_diagnostics_manager, only : mpas_atm_diag_setup
core_atmosphere/mpas_atm_core.F:      use mpas_atm_threading, only : mpas_atm_threading_init
core_atmosphere/mpas_atm_core.F:      ! Set up inner dimensions used by arrays in optimized dynamics routines
core_atmosphere/mpas_atm_core.F:      ! Note: Because the 'iau' stream has the 'iau' package attached to it, the MPAS_stream_mgr_read( )
core_atmosphere/mpas_atm_core.F:      !       call here will actually try to read the stream only if IAU is being used in the run.
core_atmosphere/mpas_atm_core.F:         ! Initialize initial_time in second time level. We need to do this because initial state
core_atmosphere/mpas_atm_core.F:      use mpas_timekeeping
core_atmosphere/mpas_atm_core.F:      use atm_time_integration
core_atmosphere/mpas_atm_core.F:      use mpas_rbf_interpolation
core_atmosphere/mpas_atm_core.F:      use mpas_vector_reconstruction
core_atmosphere/mpas_atm_core.F:      use mpas_stream_manager
core_atmosphere/mpas_atm_core.F:      use mpas_atm_boundaries, only : mpas_atm_setup_bdy_masks
core_atmosphere/mpas_atm_core.F:!     use mpas_atmphys_aquaplanet
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_control
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_init
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_manager
core_atmosphere/mpas_atm_core.F:      ! Before calling physics_init, ensure that mminlu contains the name of the land use dataset
core_atmosphere/mpas_atm_core.F:            call mpas_log_write('No information on land use dataset is available.')
core_atmosphere/mpas_atm_core.F:      ! Set up mask fields used in limited-area simulations
core_atmosphere/mpas_atm_core.F:      use mpas_timekeeping
core_atmosphere/mpas_atm_core.F:      use mpas_kind_types
core_atmosphere/mpas_atm_core.F:      use mpas_stream_manager
core_atmosphere/mpas_atm_core.F:      use mpas_derived_types, only : MPAS_STREAM_LATEST_BEFORE, MPAS_STREAM_INPUT, MPAS_STREAM_INPUT_OUTPUT
core_atmosphere/mpas_atm_core.F:      use mpas_timer
core_atmosphere/mpas_atm_core.F:      use mpas_atm_boundaries, only : mpas_atm_update_bdy_tend
core_atmosphere/mpas_atm_core.F:      use mpas_atm_diagnostics_manager, only : mpas_atm_diag_update, mpas_atm_diag_compute, mpas_atm_diag_reset
core_atmosphere/mpas_atm_core.F:      use mpas_constants
core_atmosphere/mpas_atm_core.F:      integer, intent(in) :: time_lev            ! which time level to use from state
core_atmosphere/mpas_atm_core.F:      use mpas_timekeeping
core_atmosphere/mpas_atm_core.F:      use mpas_kind_types
core_atmosphere/mpas_atm_core.F:      use atm_time_integration
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_control
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_driver
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_manager
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_update
core_atmosphere/mpas_atm_core.F:      use mpas_decomp
core_atmosphere/mpas_atm_core.F:      use mpas_timekeeping
core_atmosphere/mpas_atm_core.F:      use mpas_atm_diagnostics_manager, only : mpas_atm_diag_cleanup
core_atmosphere/mpas_atm_core.F:      use mpas_atm_threading, only : mpas_atm_threading_finalize
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_finalize
core_atmosphere/mpas_atm_core.F:      ! Compute the scaling factors to be used in the del2 and del4 dissipation
core_atmosphere/mpas_atm_core.F:      ! Compute the scaling factors to be used in relaxation zone of regional configuration
core_atmosphere/mpas_atm_core.F:   !>  by the user for compatibility. For example, two run-time options may
core_atmosphere/mpas_atm_core.F:      use mpas_atmphys_control, only : physics_compatibility_check
core_atmosphere/mpas_atm_core.F:      use mpas_atm_boundaries, only : mpas_atm_bdy_checks
core_atmosphere/mpas_atm_core_interface.F:   use mpas_attlist
core_atmosphere/mpas_atm_core_interface.F:   use mpas_derived_types
core_atmosphere/mpas_atm_core_interface.F:   use mpas_pool_routines
core_atmosphere/mpas_atm_core_interface.F:   use mpas_dmpar
core_atmosphere/mpas_atm_core_interface.F:   use mpas_io_units
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : core_type
core_atmosphere/mpas_atm_core_interface.F:      use atm_core, only : atm_core_init, atm_core_run, atm_core_finalize
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : domain_type
core_atmosphere/mpas_atm_core_interface.F:   !>  atmosphere core. It may use ay logic based on configuration options
core_atmosphere/mpas_atm_core_interface.F:      use mpas_dmpar
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : mpas_pool_type, mpas_io_context_type
core_atmosphere/mpas_atm_core_interface.F:      use mpas_pool_routines, only : mpas_pool_get_config, mpas_pool_get_package
core_atmosphere/mpas_atm_core_interface.F:      use mpas_atmphys_control
core_atmosphere/mpas_atm_core_interface.F:      use mpas_atmphys_packages
core_atmosphere/mpas_atm_core_interface.F:   !>  clock that will be used by the I/O subsystem for timing reads and writes
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : MPAS_Clock_type, mpas_pool_type
core_atmosphere/mpas_atm_core_interface.F:      use atm_core, only : atm_simulation_clock_init
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : mpas_log_type, domain_type
core_atmosphere/mpas_atm_core_interface.F:      use mpas_log, only : mpas_log_init, mpas_log_open
core_atmosphere/mpas_atm_core_interface.F:      use mpas_kind_types, only : StrKIND
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : mpas_pool_type
core_atmosphere/mpas_atm_core_interface.F:      use mpas_pool_routines, only : mpas_pool_get_config
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : mpas_decomp_list, mpas_decomp_function, MPAS_DECOMP_NOERR
core_atmosphere/mpas_atm_core_interface.F:      use mpas_decomp, only : mpas_decomp_create_decomp_list, mpas_decomp_register_method, &
core_atmosphere/mpas_atm_core_interface.F:      use mpas_derived_types, only : block_type
core_atmosphere/mpas_atm_dimensions.F:        use mpas_derived_types, only : MPAS_LOG_ERR, MPAS_LOG_CRIT
core_atmosphere/mpas_atm_dimensions.F:        use mpas_kind_types, only : StrKIND
core_atmosphere/mpas_atm_dimensions.F:        use mpas_log, only : mpas_log_write
core_atmosphere/mpas_atm_dimensions.F:            call mpas_log_write('ERROR: Dimension nVertLevels read from input file does not match the value used', messageType=MPAS_LOG_ERR)
core_atmosphere/mpas_atm_dimensions.F:            call mpas_log_write('ERROR: Dimension maxEdges read from input file does not match the value used',    messageType=MPAS_LOG_ERR)
core_atmosphere/mpas_atm_dimensions.F:            call mpas_log_write('ERROR: Dimension maxEdges2 read from input file does not match the value used',   messageType=MPAS_LOG_ERR)
core_atmosphere/mpas_atm_dimensions.F:            call mpas_log_write('ERROR: Number of scalars read from input file does not match the value used',     messageType=MPAS_LOG_ERR)
core_atmosphere/mpas_atm_threading.F:    !>  that all threads (given by OMP_get_num_threads()) will be used to
core_atmosphere/mpas_atm_threading.F:        use mpas_derived_types, only : block_type
core_atmosphere/mpas_atm_threading.F:        use mpas_pool_routines, only : mpas_pool_get_dimension, mpas_pool_add_dimension
core_atmosphere/mpas_atm_threading.F:        use omp_lib
core_atmosphere/mpas_atm_threading.F:            ! Because pools make an internal copy of dimensions, we can now
core_atmosphere/mpas_atm_threading.F:        use mpas_derived_types, only : block_type
core_atmosphere/mpas_atm_threading.F:        use mpas_pool_routines, only : mpas_pool_remove_dimension
core_atmosphere/physics/mpas_atmphys_packages.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_packages.F: use mpas_derived_types,only : mpas_pool_type,mpas_io_context_type,MPAS_LOG_ERR
core_atmosphere/physics/mpas_atmphys_packages.F: use mpas_pool_routines,only : mpas_pool_get_config,mpas_pool_get_package
core_atmosphere/physics/mpas_atmphys_packages.F: use mpas_log,only : mpas_log_write
core_atmosphere/physics/Makefile:	mpas_atmphys_landuse.o             \
core_atmosphere/physics/Makefile:	mpas_atmphys_landuse.o \
core_atmosphere/physics/Makefile:	mpas_atmphys_landuse.o \
core_atmosphere/physics/Makefile:	mpas_atmphys_landuse.o \
core_atmosphere/physics/Makefile:mpas_atmphys_landuse.o: \
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use module_sf_mynn
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: use module_sf_sfclay
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F:!   is actually not used in subroutine sfclayinit.
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F:! * changed the definition of dx_p to match that used in other physics parameterizations.
core_atmosphere/physics/mpas_atmphys_driver_sfclayer.F: logical, parameter:: allowed_to_read = .false. !actually not used in subroutine sfclayinit.
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use module_bl_mynn
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90: use module_bl_ysu
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_pbl.F90:! * for the mynn parameterization, change the definition of dx_p to match that used in other physics
core_atmosphere/physics/mpas_atmphys_constants.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_constants.F: use mpas_constants, only : pii, cp, gravity, R_d => rgas, rvord
core_atmosphere/physics/mpas_atmphys_control.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_control.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_control.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_control.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_control.F: use mpas_atmphys_vars, only: l_mp_tables
core_atmosphere/physics/mpas_atmphys_control.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_control.F:! * added the physics suite "convection_scale_aware" (see below for the physics options used in the suite).
core_atmosphere/physics/mpas_atmphys_control.F:!>  by the user for compatibility. For example, two run-time options may
core_atmosphere/physics/mpas_atmphys_init_microphysics.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_init_microphysics.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_init_microphysics.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_init_microphysics.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_init_microphysics.F:!use module_mp_thompson, only: is_aerosol_aware,naCCN0,naCCN1,naIN0,naIN1,ntb_arc,ntb_arw,ntb_art,ntb_arr, &
core_atmosphere/physics/mpas_atmphys_init_microphysics.F:! * added "use mpas_dmpar" at the top of the module.
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_atmphys_manager, only: gmt,curr_julday,julday,year
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_atmphys_camrad_init
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_atmphys_rrtmg_swinit
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use module_ra_cam
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F: use module_ra_rrtmg_sw
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F:!   climatology as the one used in the CAM radiation codes.
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_radiation_sw.F:! * removed qr_p, and qg_p in the call to rrtmg_swrad since not used in the calculation of the cloud optical
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use mpas_atmphys_date_time
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_o3climatology.F: use module_ra_cam_support, only: r8, getfactors
core_atmosphere/physics/mpas_atmphys_o3climatology.F:!files are the same as the ones used in the CAM long- and short-wave radiation codes.
core_atmosphere/physics/mpas_atmphys_o3climatology.F:!when namelist parameter config_o3climatology is set to true, o3clim is used in the RRTMG long-
core_atmosphere/physics/mpas_atmphys_o3climatology.F:!wave and short-wave radiation codes,and replaces the annual-mean ozone sounding used by default.
core_atmosphere/physics/mpas_atmphys_o3climatology.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_o3climatology.F:!note that following will drift. need to use actual month/day info to compute julian.
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F: use module_sf_noahlsm
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:! * added "use mpas_kind_types" at the top of the module.
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:! now use iterative solution for liquid soil water content using
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:!ALBEDO,and Z0 are specified in LAND-USE TABLE. SHDFAC is the monthly green vegetation data.
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:!RGL   : Parameters used in radiation stress function
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:!HS    : Parameter used in vapor pressure deficit function
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:!CFACTR: Parameter used in the canopy inteception calculation
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:          write(mess,*) '   landuse type = ' // trim ( lutype ) // ' found', &
core_atmosphere/physics/mpas_atmphys_lsm_noahinit.F:       call physics_error_fatal ('land use dataset '''//mminlu//''' not found in VEGPARM.TBL.')
core_atmosphere/physics/mpas_atmphys_interface.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_interface.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_interface.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_interface.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_interface.F:!Interface for conversion between variables used in the MPAS dynamical core and variables needed in the
core_atmosphere/physics/mpas_atmphys_interface.F:!   calculation of th_p so that we do not need to use the pointer qv.
core_atmosphere/physics/mpas_atmphys_interface.F:!   the calculation of th_p so that we do not need to use the pointer qv.
core_atmosphere/physics/mpas_atmphys_interface.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_interface.F:!... arrays used for calculating the hydrostatic pressure and exner function:
core_atmosphere/physics/mpas_atmphys_interface.F:    !use log of pressure to avoid occurrences of negative top-of-the-model pressure.
core_atmosphere/physics/mpas_atmphys_landuse.F: module mpas_atmphys_landuse
core_atmosphere/physics/mpas_atmphys_landuse.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_landuse.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_landuse.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_landuse.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_landuse.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_landuse.F: public:: landuse_init_forMPAS
core_atmosphere/physics/mpas_atmphys_landuse.F:!This module reads the file LANDUSE.TBL which defines the land type of each cell, depending on
core_atmosphere/physics/mpas_atmphys_landuse.F:! subroutines in mpas_atmphys_landuse:
core_atmosphere/physics/mpas_atmphys_landuse.F:! landuse_init_forMPAS: main initialization for land use types.
core_atmosphere/physics/mpas_atmphys_landuse.F:! Given the value of the input index lu_index, and the julian day julday, landuse_init_forMPAS
core_atmosphere/physics/mpas_atmphys_landuse.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_landuse.F:! * in subroutine landuse_init_forMPAS, added the definition of isurban as a function of the
core_atmosphere/physics/mpas_atmphys_landuse.F:!   input landuse data file.
core_atmosphere/physics/mpas_atmphys_landuse.F:! * in subroutine landuse_int_forMPAS, added the initialization of variable ust to a very small value. this was
core_atmosphere/physics/mpas_atmphys_landuse.F:!   needed when the surface layer scheme was updated to that used in WRF version 3.8.1
core_atmosphere/physics/mpas_atmphys_landuse.F:! * removed the parameter frac_seaice which is not used anymore and has been replaced with config_frac_seaice. 
core_atmosphere/physics/mpas_atmphys_landuse.F:! * now use isice and iswater initialized in the init file instead of initialized in mpas_atmphys_landuse.F.
core_atmosphere/physics/mpas_atmphys_landuse.F: subroutine landuse_init_forMPAS(dminfo,julday,mesh,configs,diag_physics,sfc_input)
core_atmosphere/physics/mpas_atmphys_landuse.F: integer:: ic,is,isn,lucats,lumatch,luseas
core_atmosphere/physics/mpas_atmphys_landuse.F:!call mpas_log_write('--- enter subroutine landuse_init_forMPAS:')
core_atmosphere/physics/mpas_atmphys_landuse.F:!call mpas_log_write('--- enter subroutine landuse_init_forMPAS: julian day=$i' , intArgs=(/julday/))
core_atmosphere/physics/mpas_atmphys_landuse.F:!reads in the landuse properties from landuse.tbl:
core_atmosphere/physics/mpas_atmphys_landuse.F:    open(land_unit,file='LANDUSE.TBL',action='READ',status='OLD',iostat=istat)
core_atmosphere/physics/mpas_atmphys_landuse.F:       call physics_error_fatal('subroutine landuse_init_forMPAS: ' // &
core_atmosphere/physics/mpas_atmphys_landuse.F:                                'failure opening LANDUSE.TBL')
core_atmosphere/physics/mpas_atmphys_landuse.F:       read(unit=land_unit,fmt=*) lucats,luseas
core_atmosphere/physics/mpas_atmphys_landuse.F:          write(mess,*) '   landuse type = ' // trim (lutype) // ' found', lucats, &
core_atmosphere/physics/mpas_atmphys_landuse.F:                        ' categories', luseas, ' seasons'
core_atmosphere/physics/mpas_atmphys_landuse.F:          do is = 1,luseas
core_atmosphere/physics/mpas_atmphys_landuse.F:    do is = 1, luseas
core_atmosphere/physics/mpas_atmphys_landuse.F:!      if(is .lt. luseas) call mpas_log_write('')
core_atmosphere/physics/mpas_atmphys_landuse.F: DM_BCAST_INTEGER(luseas)
core_atmosphere/physics/mpas_atmphys_landuse.F:    call mpas_log_write('--- skip the end of landuse_init_forMPAS')
core_atmosphere/physics/mpas_atmphys_landuse.F:!call mpas_log_write('--- end subroutine landuse_init_forMPAS')
core_atmosphere/physics/mpas_atmphys_landuse.F: end subroutine landuse_init_forMPAS
core_atmosphere/physics/mpas_atmphys_landuse.F: end module mpas_atmphys_landuse
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_atmphys_constants, only: R_d,R_v,degrad
core_atmosphere/physics/mpas_atmphys_todynamics.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_atm_dimensions
core_atmosphere/physics/mpas_atmphys_todynamics.F:    use mpas_atm_dimensions
core_atmosphere/physics/mpas_atmphys_todynamics.F: use mpas_atm_dimensions
core_atmosphere/physics/mpas_atmphys_utilities.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_utilities.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_utilities.F: use mpas_derived_types, only : MPAS_LOG_ERR, MPAS_LOG_CRIT
core_atmosphere/physics/mpas_atmphys_utilities.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_timekeeping
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_convection, only: init_convection
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_lsm,only: init_lsm
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_microphysics
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_radiation_lw, only: init_radiation_lw
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_radiation_sw, only: init_radiation_sw
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_driver_sfclayer
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_landuse
core_atmosphere/physics/mpas_atmphys_init.F: use mpas_atmphys_o3climatology
core_atmosphere/physics/mpas_atmphys_init.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_init.F: call landuse_init_forMPAS(dminfo,julday,mesh,configs,diag_physics,sfc_input)
core_atmosphere/physics/checkout_data_files.sh:# The purpose of this script is to obtain lookup tables used by the WRF physics
core_atmosphere/physics/checkout_data_files.sh:# If none of the methods used in this script are successful in acquiring the 
core_atmosphere/physics/checkout_data_files.sh:#   use the tables from the v7.0 tag in the MPAS-Data repository.
core_atmosphere/physics/checkout_data_files.sh:echo "This may be because 'git', 'svn', and 'curl' are not installed,"
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_derived_types
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F: use module_ra_rrtmg_sw
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:!used in MPAS. It replaces the initialization in module_ra_rrtgm_sw.F.
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:!Perform g-point reduction and other initializations: specific heat of dry air (cp) used in
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:                                'find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:!  spectral bands used in RRTMG_SW.  Here, the data are defined for 16
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:!  the total number of g-points from 224 to 112 for use in the GCM.
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg16, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg17, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg18, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg19, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg20, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg21, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg22, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg23, only : kao, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg24, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg25, only : kao, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg26, only : sfluxrefo, raylo
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg27, only : kao, kbo, sfluxrefo, raylo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg28, only : kao, kbo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_swinit.F:      use rrsw_kg29, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_driver_radiation_sw, only: radconst
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_manager, only: gmt,curr_julday,julday,year
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_camrad_init
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_rrtmg_lwinit
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use module_ra_cam            
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use module_ra_rrtmg_lw
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F: use module_ra_rrtmg_vinterp
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F:!   climatology as the one used in the CAM radiation codes.
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F:! * added diagnostics of the effective radii for cloud water, cloud ice, and snow used in rrtmg_lwrad.
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F:! * removed qr_p, and qg_p in the call to rrtmg_lwrad since not used in the calculation of the cloud optical
core_atmosphere/physics/mpas_atmphys_driver_radiation_lw.F:! * substituted "use mpas_atmphys_o3climatology" with "use module_ra_rrtmg_vinterp" since we moved subroutine
core_atmosphere/physics/mpas_atmphys_vars.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_vars.F:!mpas_atmphys_vars contains all local variables and arrays used in the physics parameterizations.
core_atmosphere/physics/mpas_atmphys_vars.F:! * added diagnostics of the effective radii for cloud water, cloud ice, and snow used in rrtmg_lwrad.
core_atmosphere/physics/mpas_atmphys_vars.F:!   and snow mixing ratios local to the calculation of the cloud fraction, and used in the radiation codes.
core_atmosphere/physics/mpas_atmphys_vars.F:! * moved the declarations of arrays delta_p,wstar_p,uoce_p,and voce_p since they are now used in both modules
core_atmosphere/physics/mpas_atmphys_vars.F:!   landuse_init_forMPAS).
core_atmosphere/physics/mpas_atmphys_vars.F:!... arrays used for calculating the hydrostatic pressure and exner function:
core_atmosphere/physics/mpas_atmphys_vars.F:    warm_rain=.false.  !warm-phase cloud microphysics only (used in WRF).
core_atmosphere/physics/mpas_atmphys_vars.F:    f_ice,            &!fraction of cloud ice (used in WRF only).
core_atmosphere/physics/mpas_atmphys_vars.F:    f_rain             !fraction of rain (used in WRF only).
core_atmosphere/physics/mpas_atmphys_vars.F:    integer, parameter:: ishallow  = 1 !shallow convection used with grell scheme.
core_atmosphere/physics/mpas_atmphys_vars.F:    swvisdif_p,       &!visible diffuse downward flux                                       [W m-2]
core_atmosphere/physics/mpas_atmphys_vars.F:    swnirdif_p         !near-IR diffuse downward flux                                       [W m-2]
core_atmosphere/physics/mpas_atmphys_vars.F:    icloud= 1          !used in WRF only.
core_atmosphere/physics/mpas_atmphys_vars.F:    fasdas = 0         !for WRF surface data assimilation system (not used in MPAS).
core_atmosphere/physics/mpas_atmphys_vars.F:    sf_surface_physics !used to define the land surface scheme by a number instead of name. It
core_atmosphere/physics/mpas_atmphys_vars.F:    alswvisdif_p,     &!diffuse-beam surface albedo in visible spectrum                                        [-]
core_atmosphere/physics/mpas_atmphys_vars.F:    alswnirdif_p       !diffuse-beam surface albedo in near-IR spectrum                                        [-]
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_init_atm_surface
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_atmphys_date_time
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_initialize_real.F:! * In subroutine physics_init_seaice, assign the sea-ice land use category as a function of
core_atmosphere/physics/mpas_atmphys_initialize_real.F:!   the land use category input file (MODIS OR USGS).
core_atmosphere/physics/mpas_atmphys_initialize_real.F:!(m) as functions of the input snow water content (kg/m2). we use a 5:1 ratio from liquid
core_atmosphere/physics/mpas_atmphys_initialize_real.F:    call physics_error_fatal('NOAH lsm uses 4 soil layers. Correct config_nsoillevels.')
core_atmosphere/physics/mpas_atmphys_initialize_real.F: use mpas_abort, only : mpas_dmpar_global_abort
core_atmosphere/physics/mpas_atmphys_initialize_real.F:    call physics_error_fatal('NOAH lsm uses 4 soil layers. Correct config_nsoillevels.')
core_atmosphere/physics/mpas_atmphys_initialize_real.F:!    layers used in the NOAH land surface scheme:
core_atmosphere/physics/mpas_atmphys_initialize_real.F: character(len=StrKIND),pointer:: config_landuse_data
core_atmosphere/physics/mpas_atmphys_initialize_real.F:!adding "use module_physics_vars" since this subroutine is only used for the initialization of
core_atmosphere/physics/mpas_atmphys_initialize_real.F: call mpas_pool_get_config(configs, 'config_landuse_data', config_landuse_data)
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:! names previously used for the single precision versions have been
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:! are hardcoded to use IEEE arithmetic.
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:!   The routine  CALERF  is intended for internal packet use only,
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:!   transportable program uses rational functions that theoretically
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:   !  This version uses 8-byte reals
core_atmosphere/physics/physics_wrf/module_cam_error_function.F:   !  This version uses 4-byte reals
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:   USE module_mp_radar
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:         !  Sending array starting locations of optional variables may cause
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:! Temporaries used for inlining fpvs function
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!     rgmma function:  use infinite product form
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!.. get used within radar_init to create other variables used in the
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        0 : use departure wind for advection
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        1 : use mean wind for advection
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        > 1 : use mean wind after iter-1 iterations
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:! plm is 2nd order, we can use 2nd order wi or 3rd order wi
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:! then back to use mean terminal velocity
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        0 : use departure wind for advection
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        1 : use mean wind for advection
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!        > 1 : use mean wind after iter-1 iterations
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:! plm is 2nd order, we can use 2nd order wi or 3rd order wi
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:! then back to use mean terminal velocity
core_atmosphere/physics/physics_wrf/module_mp_wsm6.F:!.. Uses code from Uli Blahak (rayleigh_soak_wetgraupel and supporting
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use for 112 g-point model   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use for 224 g-point model   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use for 112 g-point model   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use for 224 g-point model   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, naerec
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!                    Key, streamer user's guide, cooperative institude 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng17
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng18
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng19
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng20
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng21
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng22
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng23
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng24
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng25
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng26
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng27
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng28
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng29
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! od_lo  :  real   : Value of tau below which expansion is used
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, mg, ngptsw, jpb1, jpb2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, ngptsw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only: grav
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only: ngb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:  ! Modifications: Generalized for use with RRTMG and added Mersenne Twister as the default
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:  !  The exponential overlap uses also a length scale, Zo. (real,    parameter  :: Zo = 2500. ) 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:  !  use 'changeSeed = 1' for the first call and'changeSeed = 2' for the second call 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:  !  We can use arbitrary complicated PDFS. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use mcica_random_numbers
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use MersenneTwister, only: randomNumberSequence, &   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      real(kind=rb), parameter :: qmin   = 1.0e-10_rb   ! min cloud water and cloud ice (not used)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Must use pmid from bottom four layers. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    - if the layer above is cloudy, we use the same random number than in the layer above
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    - if the layer above is clear, we use a new random number 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F: use mpas_atmphys_utilities,only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ngptsw, jpband, jpb1, jpb2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_cld, only : extliq1, ssaliq1, asyliq1, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only : wavenum1, wavenum2, ngb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only : hvrclc, hnamclc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! and g-point interval for use by the McICA method.  
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Note: This option uses Ebert and Curry approach for all particle sizes similar to
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_tbl, only : tblint, bpade, od_lo, exp_tbl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only : hvrrft, hnamrft
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      prefd   : diffuse beam reflectivity 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      ptrad   : diffuse beam transmissivity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(inout) :: prefd(:)                 ! diffuse beam reflectivity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(inout) :: ptrad(:)                 ! diffuse beam transmissivity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! diffuse beam
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : mxmol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_ref, only : pref, preflog, tref
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only : hvrset, hnamset
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im), intent(out) :: laytrop        ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      use parrrsw, only : mg, jpband, nbndsw, ngptsw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only: oneminus
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only: nspa, nspb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only: hvrtau, hnamtau
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! *    ONEMINUS - since problems are caused in some cases by interpolation     *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! *              trace species, this is the factor used to multiply the        *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! *              atmospheres (used below LAYTROP)                              *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im), intent(in) :: laytrop            ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg16, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng17, ngs16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg17, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng18, ngs17
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg18, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng19, ngs18
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg19, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng20, ngs19
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg20, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng21, ngs20
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg21, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng22, ngs21
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg22, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng23, ngs22
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg23, only : absa, ka, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng24, ngs23
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg24, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng25, ngs24
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg25, only : absa, ka, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng26, ngs25
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg26, only : sfluxref, rayl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng27, ngs26
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg27, only : absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng28, ngs27
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg28, only : absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : ng29, ngs28
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg29, only : absa, ka, absb, kb, forref, selfref, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_setcoef, only: swatmref
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  of the shortwave model.  Lookup tables are computed for use in the SW
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : mg, nbndsw, ngptsw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_tbl, only: ntbl, tblint, pade, bpade, tau_tbl, exp_tbl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only: hvrini, hnamini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! of 0.0001.  The inverse of the constant used in the Pade approximation to 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only: heatfac, grav, planck, boltz, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!     caution should be used if the mapping is modified.  The full 224
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use this set for 112 quadrature point (g-point) model
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use this set for full 224 quadrature point (g-point) model
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! as used in the ECMWF IFS model (see module rrsw_aer.F90 for details)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_aer, only : rsrtaua, rsrpiza, rsrasya
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  g-point reduced data are put into new arrays for use in RRTMG_SW.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg16, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg17, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg18, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg19, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg20, only : kao, kbo, selfrefo, forrefo, sfluxrefo, absch4o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg21, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg22, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg23, only : kao, selfrefo, forrefo, sfluxrefo, raylo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg24, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg25, only : kao, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg26, only : sfluxrefo, raylo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg27, only : kao, kbo, sfluxrefo, raylo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg28, only : kao, kbo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg29, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_cld, only : extliq1, ssaliq1, asyliq1, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    requires further user input to specify the method to be used to 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    (Reference: Key. J., Streamer User's Guide, Cooperative 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    This version uses Ebert and Curry, JGR, (1992) method for 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    bands in RRTM_SW.  Linear interpolation is used to
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    This version uses Ebert and Curry, JGR, (1992) method for 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    Linear interpolation is used to get the absorption 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only: im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      use parrrsw, only: ngptsw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(in) :: prefd(:)                   ! diffuse beam reflectivity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(in) :: ptrad(:)                   ! diffuse beam transmissivity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! prefd(jk)  diffuse reflectance
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! ptrad(jk)  diffuse transmittance
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, ngptsw, mxmol, jpband
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_tbl, only : tblint, bpade, od_lo, exp_tbl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn, only : hvrspc, hnamspc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only : ngc, ngs
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_reftra, only: reftra_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_taumol, only: taumol_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_vrtqdr, only: vrtqdr_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Revision: Bug fix for use of PALBP and PALBD: MJIacono, AER, Nov 2003
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!           if routine cldprop is used; delta scaling can be applied by swithcing
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!           code below if cldprop is not used to get cloud properties. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Revision: Modified to use McICA: MJIacono, AER, Nov 2005
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Revision: Use exponential lookup table for transmittance: MJIacono, AER, 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(in) :: palbd(:)                    ! surface albedo (diffuse)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Compute layer reflectances and transmittances for direct and diffuse sources, 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! zrefdc(jk) diffuse albedo for clear
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! zrefdo(jk) diffuse albedo for cloud
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! ztradc(jk) diffuse transmittance for clear
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! ztrado(jk) diffuse transmittance for cloudy
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! zrefd(jk)  diffuse reflectance
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! ztrad(jk)  diffuse transmittance
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Pre-delta-scaling clear and cloudy direct beam transmittance (must use 'orig', unscaled cloud OD)       
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!   Use this code if cloud properties are derived in rrtmg_sw_cldprop       
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!   Use this code if cloud properties are not derived in rrtmg_sw_cldprop       
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!   Use only if subroutine rrtmg_sw_cldprop is not used to get cloud properties and to apply delta scaling
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use exponential lookup table for transmittance, or expansion of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use mcica_subcol_gen_sw, only: mcica_subcol_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_cldprmc, only: cldprmc_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! use association to GCM initialization area ***
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!      use rrtmg_sw_init, only: rrtmg_sw_ini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_setcoef, only: setcoef_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrtmg_sw_spcvmc, only: spcvmc_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!     The mode is chosen by using either rrtmg_sw.nomcica.f90 (to not use
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!     McICA) or rrtmg_sw.f90 (to use McICA) to interface with a GCM.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    2) Input aerosol optical depth and 0.55 micron directly by layer and use
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! This version of RRTMG_SW has been modified from RRTM_SW to use a reduced
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!-- Modifications to include output for direct and diffuse 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!-- Modifications to formatting to use assumed-shape arrays. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, ngptsw, naerec, nstr, nmol, mxmol, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_aer, only : rsrtaua, rsrpiza, rsrasya
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only : heatfac, oneminus, pi
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only : wavenum1, wavenum2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(in) :: asdif(:)           ! UV/vis surface albedo: diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb), intent(in) :: aldif(:)           ! Near-IR surface albedo: diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im), intent(in) :: dyofyr          ! Day of the year (used to get Earth/Sun
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:        swdkdif(:,:)    ! Total shortwave downward diffuse flux (W/m2), Dimensions: (ncol,nlay) jararias, 2013/08/10
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im) :: icpr                ! cldprop/cldprmc use flag
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb) :: albdif(nbndsw)         ! surface albedo, diffuse         ! zalbd
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im) :: laytrop             ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im) :: layswtch            ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im) :: laylow              ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb) :: difdflux(nlay+2)       ! Diffuse downward shortwave surface flux
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb) :: difdnuv(nlay+2)        ! Diffuse downward shortwave flux, UV/vis
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      real(kind=rb) :: difdnir(nlay+2)        ! Diffuse downward shortwave flux, near-IR
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      iout = 0 !BSINGH(PNNL) initializing iout to zero(Might be wrong!) as this variable is never initialized but used in spcvmc_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  imca = 0, use standard forward model calculation (clear and overcast only)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  imca = 1, use McICA for Monte Carlo treatment of sub-grid cloud variability
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! *** This version uses McICA (imca = 1) ***
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! iaer = 6, use six ECMWF aerosol types
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Prepare atmosphere profile from GCM for use in RRTMG, and define
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  For cloudy atmosphere, use cldprop to set cloud optical properties based on
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! IAER = 6: Use ECMWF six aerosol types. See rrsw_aer.f90 for details.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  Direct/diffuse fluxes
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:            swdkdif(iplon,i) = difdflux(i) ! all-sky diffuse flux  jararias, 2013/08/10
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  UV/visible direct/diffuse fluxes
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  Near-IR direct/diffuse fluxes
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only : pi
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Use Iqbal's equation 1.2.1
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  Input atmospheric profile from GCM, and prepare it for use in RRTMG_SW.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use parrrsw, only : nbndsw, ngptsw, nstr, nmol, mxmol, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_con, only : heatfac, oneminus, pi, grav, avogad
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_wvn, only : ng, nspa, nspb, wavenum1, wavenum2, delwave
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      integer(kind=im), intent(in) :: dyofyr          ! Day of the year (used to get Earth/Sun
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! 1) Use Earth/Sun distance flux adjustment provided by GCM (input as adjes);
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!    (Set adjflx to 1. to use constant Earth/Sun distance of 1 AU). 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! The following section can be used to set values for an additional layer (from
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! convert to molec/cm2 based on coldry for use in rrtm.  
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! If an extra layer is being used in RRTMG, set all cloud properties to zero in the extra layer.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use mpas_atmphys_constants,only : cp,g=>gravity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use module_ra_rrtmg_vinterp,only: vinterp_ozn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!>     of time-varying trace gases: added option to use the ozone climatology
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use module_model_constants,only : cp
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:USE module_state_description, ONLY : FER_MP_HIRES, FER_MP_HIRES_ADVECT, ETAMP_HWRF 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:USE module_state_description, ONLY : FER_MP_HIRES, FER_MP_HIRES_ADVECT
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!USE module_dm
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use parrrsw, only : nbndsw, ngptsw, naerec
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use rrtmg_sw_init, only: rrtmg_sw_ini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use rrtmg_sw_rad, only: rrtmg_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use mcica_subcol_gen_sw, only: mcica_subcol_sw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:use module_ra_rrtmg_lw, only : inirad, o3data, relcalc, reicalc, retab
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!--- additional input arguments to use the CAM ozone climatology:
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:             !--- zero out cloud optical properties here (not used when passing physical properties to rrtmg_sw):
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:! Specific heat of dry air (cp) used in flux to heating rate conversion factor.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:                               'find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  spectral bands used in RRTMG_SW.  Here, the data are defined for 16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:!  the total number of g-points from 224 to 112 for use in the GCM.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg16, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg17, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg18, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg19, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg20, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg21, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg22, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg23, only : kao, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg24, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg25, only : kao, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg26, only : sfluxrefo, raylo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg27, only : kao, kbo, sfluxrefo, raylo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg28, only : kao, kbo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_sw.F:      use rrsw_kg29, only : kao, kbo, selfrefo, forrefo, sfluxrefo, &
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:  use mpas_atmphys_utilities
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! portion of each species group to use in computation
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! portion of each species group to use in computation
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:      real(r8) ::  scon       ! solar constant (not used in WRF)
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use volcrad
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use volcrad
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use volcrad
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! and a decrease of mixing ratio in the stratosphere. Tropopause
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use phys_grid,    only: get_rlat_all_p
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use physconst,    only: mwdry, mwch4, mwn2o, mwf11, mwf12
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ghg_surfvals, only: ch4vmr, n2ovmr, f11vmr, f12vmr
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:   real(r8) ptrop               ! pressure level of tropopause
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!        pressure of tropopause
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ghg_surfvals, only: co2mmr
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! This routine is useful for evaluating only a selected region in the
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! use empirical formulas to construct effective radii
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use aer_optics, only: kbg,idxVIS
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use physconst, only: gravit
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use physconst,     only: gravit
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! This information is used to implement maximum overlap in these regions
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use physconst,          only: tmelt
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!                     and Users Guide, NCAR/TN-367+STR, 147 pp.
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!                     and Users Guide, NCAR/TN-367+STR, 147 pp.
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!                     and Users Guide, NCAR/TN-367+STR, 147 pp.
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use wv_saturation, only: gestbl
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! Uses Goff & Gratch (1946) relationships to generate the table
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use pmgrid, only: masterproc
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use physconst, only: tmelt
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use abortutils, only: endrun
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! the radiation scheme uses cgs units.
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use ppgrid,       only: pver, pverp
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use comozp,       only: cplos, cplol
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use pmgrid,       only: masterproc, plev, plevp
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use radae,        only: radaeini
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!  use physconst,    only: mwdry, mwco2
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use mpishorthand
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use pmgrid  ! masterproc is here
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!   use ioFileMod, only: getfil
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!    use mpishorthand
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:        CALL wrf_error_fatal ( 'module_ra_cam: aer_optics_initialize: Can not find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:        CALL wrf_error_fatal ( 'module_ra_cam: radaeinit: Can not find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:! Set up table of H2O saturation vapor pressures for use in calculation
core_atmosphere/physics/physics_wrf/module_ra_cam_support.F:!     because:
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!  USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:! Note:  KF Lookup table is used by subroutines KF_eta_PARA, TPMIX2,
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:! use or not.
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!***** The KF scheme that is currently used in experimental runs of EMCs 
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!      DATA RATE/0.01/  ! value used in NRCM
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:! use it for shallow convection...For now, assume it is not available....
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...PERTURBATION TO VERTICAL VELOCITY HAS BEEN USED WITH THE MOST
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...TTEMP IS USED DURING CALCULATION OF THE LINEAR GLACIATION
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...INITIALIZE SOME VARIABLES TO BE USED LATER IN THE VERT ADVECTION SCH
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...AND MIDTROPOSPHERE IS USED.
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!... MEAN PEF. IS USED TO COMPUTE RAINFALL.
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:! use iterative procedure to find mass fluxes...
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...TO BE USED LATER FOR DIAGNOSTIC PURPOSES, THEN ABORT RUN...
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:!...TO ALLOW THE USE OF LOOKUP TABLE TO EXTRACT TMP FROM THETAE...
core_atmosphere/physics/physics_wrf/module_cu_kfeta.F:! NOTE: Calculations for mixed/ice phase no longer used...jsk 8/00
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:! * used preprocessing option to replace module_model_constants with mpas_atmphys_constants; used preprocessing
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F: use mpas_atmphys_constants, only: &
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:     use module_model_constants, only:rd=>r_d, rv=>r_v, &
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:! use or not.
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:!        (used in subroutine surf)
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:!        (used in subroutine cloud)
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:!       cuini:  initializes values at vertical grid used in cu-parametr.
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:!             the values will be used to define cloud base values.
core_atmosphere/physics/physics_wrf/module_cu_tiedtke.F:! for use at next level
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Use for 140 g-point model 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Use for 256 g-point model 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Use for 140 g-point model
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Use for 256 g-point model
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind ,only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! tau_tbl:  real   : Clear-sky optical depth (used in cloudy radiative
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                    The "linear in tau" method is used to make 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : nbndlw, mg, ngptlw, maxinpx
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                    Used for calculation across total spectrum
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                    Used for calculation in band 16 only if 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Users must declare one or more variables of type randomNumberSequence in the calling 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!   use RandomNumbers
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    Redistribution and use in source and binary forms, with or without
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!      3. The names of its contributors may not be used to endorse or promote 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  use parkind, only : im => kind_im, rb => kind_rb 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  ! This version uses the Mersenne Twister to generate random numbers on [0, 1]. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  use MersenneTwister, only: randomNumberSequence, & ! The random number engine.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!!  use time_manager_mod, only: time_type, get_date
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  use parkind, only : im => kind_im, rb => kind_rb 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : nbndlw, ngptlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: grav
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: ngb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  ! Modifications: Generalized for use with RRTMG and added Mersenne Twister as the default
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  !  The exponential overlap uses also a length scale, Zo. (real,    parameter  :: Zo = 2500. ) 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  !  use 'changeSeed = 1' for the first call and'changeSeed = 2' for the second call 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:  !  We can use arbitrary complicated PDFS. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use mcica_random_numbers
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use MersenneTwister, only: randomNumberSequence, &   
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!      real(kind=rb), parameter :: qmin   = 1.0e-10_rb   ! min cloud water and cloud ice (not used)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Must use pmid from bottom four layers. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    - if the layer above is cloudy, we use the same random number than in the layer above
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    - if the layer above is clear, we use a new random number 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F: use mpas_atmphys_utilities,only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ngptlw, nbndlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_cld, only: abscld1, absliq0, absliq1, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: ngb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn, only: hvrclc, hnamclc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     requires further user input to specify the method to be used to 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                     User's Guide, Cooperative Institute for
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                    bands in RRTM_LW.  Linear interpolation is used to
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                     Linear interpolation is used to get the absorption 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: fluxfac, heatfac
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: delwave, ngb, ngs
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_tbl, only: tblint, bpade, tau_tbl, exp_tbl, tfn_tbl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn, only: hvrrtc, hnamrtc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  angle (SECDIFF) is used for the angle integration.  Bands 2-3 and 5-9 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  use a value for SECDIFF that varies from 1.50 to 1.80 as a function of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  the column water vapor, and other bands use a value of 1.66.  The Gaussian 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  use of the emissivity angle for the flux integration can cause errors of 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    tfacgas                      ! gas-only pade factor, used for planck fn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!    tfactot                      ! gas and cloud pade factor, used for planck fn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  diffusivity angle flux integration used here.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  all layers when a cloud is present (ICLDDN=1), because surface 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : nbndlw, mg, maxxsec, mxmol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: totplnk, totplk16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn, only: hvrset, hnamset
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      integer(kind=im), intent(out) :: laytrop        ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  this band, use integrated Planck values up to 3250 cm-1.  
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  Setup reference ratio to be used in calculation of binary
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  Setup reference ratio to be used in calculation of binary
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  Rescale selffac and forfac for use in taumol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, maxxsec, ngptlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: oneminus
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: nspa, nspb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn, only: hvrtau, hnamtau
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! *     ONEMINUS - since problems are caused in some cases by interpolation     *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! *               atmospheres (used below LAYTROP)                              *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! *               atmospheres (used below/above LAYTROP)                        *
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      integer(kind=im), intent(in) :: laytrop         ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng1
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg01, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: pp, corradj, scalen2, tauself, taufor, taun2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor + taun2)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng2, ngs1
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg02, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: pp, corradj, tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng3, ngs2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg03, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, n2om1, n2om2, absn2o
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng4, ngs3
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg04, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng5, ngs4
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg05, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, o3m1, o3m2, abso3
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng6, ngs5
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg06, only : fracrefa, absa, ka, ka_mco2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, absco2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng7, ngs6
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg07, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, co2m1, co2m2, absco2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng8, ngs7
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg08, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, absco2, abso3, absn2o
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng9, ngs8
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg09, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, n2om1, n2om2, absn2o
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng10, ngs9
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg10, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng11, ngs10
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg11, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: scaleo2, tauself, taufor, tauo2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng12, ngs11
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg12, only : fracrefa, absa, ka, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng13, ngs12
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg13, only : fracrefa, fracrefb, absa, ka, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor, co2m1, co2m2, absco2 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng14, ngs13
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg14, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay) * (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng15, ngs14
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg15, only : fracrefa, absa, ka, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: scalen2, tauself, taufor, n2m1, n2m2, taun2 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : ng16, ngs15
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_ref, only : chi_mls
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg16, only : fracrefa, fracrefb, absa, ka, absb, kb, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      real(kind=rb) :: tauself, taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Calculate reference ratio to be used in calculation of Planck
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:            tauself = selffac(lay)* (selfref(inds,ig) + selffrac(lay) * &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                 + tauself + taufor
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrtmg_lw_setcoef, only: lwatmref, lwavplank
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  of the longwave model.  Lookup tables are computed for use in the LW
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_tbl, only: ntbl, tblint, pade, bpade, tau_tbl, exp_tbl, tfn_tbl
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn, only: hvrini, hnamini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     TAU_TBL Clear-sky optical depth (used in cloudy radiative transfer)
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!             The "linear in tau" method is used to make the table.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! are computed at intervals of 0.001.  The inverse of the constant used
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : maxxsec, maxinpx
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: heatfac, grav, planck, boltz, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     nxmol     - number of cross-sections input by user
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!                 cross-section specified by user
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     caution should be used if the mapping is modified.  The full 256
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  g-point reduced data are put into new arrays for use in RRTM.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng1
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg01, only: fracrefao, fracrefbo, kao, kbo, kao_mn2, kbo_mn2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng2
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg02, only: fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng3
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg03, only: fracrefao, fracrefbo, kao, kbo, kao_mn2o, kbo_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng4
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg04, only: fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng5
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg05, only: fracrefao, fracrefbo, kao, kbo, kao_mo3, ccl4o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng6
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg06, only: fracrefao, kao, kao_mco2, cfc11adjo, cfc12o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng7
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg07, only: fracrefao, fracrefbo, kao, kbo, kao_mco2, kbo_mco2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng8
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg08, only: fracrefao, fracrefbo, kao, kao_mco2, kao_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng9
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg09, only: fracrefao, fracrefbo, kao, kao_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng10
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg10, only: fracrefao, fracrefbo, kao, kbo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng11
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg11, only: fracrefao, fracrefbo, kao, kao_mo2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng12
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg12, only: fracrefao, kao, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng13
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg13, only: fracrefao, fracrefbo, kao, kao_mco2, kao_mco, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng14
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg14, only: fracrefao, fracrefbo, kao, kbo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng15
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg15, only: fracrefao, kao, kao_mn2, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : mg, nbndlw, ngptlw, ng16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg16, only: fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_cld, only: abscld1, absliq0, absliq1, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! |  This software may be used, copied, or redistributed as long as it is    |
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parkind, only : im => kind_im, rb => kind_rb
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_vsn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use mcica_subcol_gen_lw, only: mcica_subcol_lw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrtmg_lw_cldprmc, only: cldprmc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! use association to the GCM initialization area ***
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!      use rrtmg_lw_init, only: rrtmg_lw_ini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrtmg_lw_rtrnmc, only: rtrnmc
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrtmg_lw_setcoef, only: setcoef
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrtmg_lw_taumol, only: taumol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     The mode is chosen by using either rrtmg_lw.nomcica.f90 (to not use
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     McICA) or rrtmg_lw.f90 (to use McICA) to interface with a GCM. 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!     Two random number generators are available for use when imca = 1.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! This version of RRTMG_LW has been modified from RRTM_LW to use a reduced 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!   revisions for use with GCMs.  
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!-- Adapted for use with NCAR/CAM.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!-- Modifications to formatting to use assumed-shape arrays.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : nbndlw, ngptlw, maxxsec, mxmol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: fluxfac, heatfac, oneminus, pi
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: ng, ngb, nspa, nspb, wavenum1, wavenum2, delwave
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      integer(kind=im) :: laytrop             ! tropopause layer index
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  imca = 0, use standard forward model calculation
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  imca = 1, use McICA for Monte Carlo treatment of sub-grid cloud variability
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! *** This version uses McICA (imca = 1) ***
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  Prepare atmospheric profile from GCM for use in RRTMG, and define
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  For cloudy atmosphere, use cldprop to set cloud optical properties based on
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! to be used.  Clear sky calculation is done simultaneously.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  Input atmospheric profile from GCM, and prepare it for use in RRTMG_LW.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use parrrtm, only : nbndlw, ngptlw, nmol, maxxsec, mxmol
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_con, only: fluxfac, heatfac, oneminus, pi, grav, avogad
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_wvn, only: ng, nspa, nspb, wavenum1, wavenum2, delwave, ixindx
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! The following section can be used to set values for an additional layer (from
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! convert to molec/cm2 based on coldry for use in rrtm.  also, compute precipitable
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! If an extra layer is being used in RRTMG, set all cloud properties to zero in the extra layer.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use mpas_atmphys_constants,only : cp,g=>gravity
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use module_ra_rrtmg_vinterp,only: vinterp_ozn
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!>      following Cavalo et al. (2010). added option to use the ozone climatology
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!>    * added diagnostics of the effective radii for cloud water, cloud ice, and snow used in rrtmg_lwrad.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use module_model_constants, only : cp
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:   USE module_state_description, ONLY : FER_MP_HIRES, FER_MP_HIRES_ADVECT, ETAMP_HWRF 
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:   USE module_state_description, ONLY : FER_MP_HIRES, FER_MP_HIRES_ADVECT
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!use module_dm
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use parrrtm, only : nbndlw, ngptlw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use rrtmg_lw_init, only: rrtmg_lw_ini
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use rrtmg_lw_rad, only: rrtmg_lw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:use mcica_subcol_gen_lw, only: mcica_subcol_lw
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!--- additional input arguments to use the CAM ozone climatology:
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:       !    the atmosphere: in contrast to WRF, MPAS columns have different model-top pressures since MPAS uses
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:       !--- add zero as top level. this gets the temperature max at the stratopause, reducing downward flux
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:          !--- zero out cloud optical properties here (not used when passing physical properties to rrtmg_lw as
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:! Specific heat of dry air (cp) used in flux to heating rate conversion factor.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:                               'find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  spectral bands used in RRTMG_LW.  Here, the data are defined for 16
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:!  the total number of g-points from 256 to 140 for use in the GCM.
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg01, only : fracrefao, fracrefbo, kao, kbo, kao_mn2, kbo_mn2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg02, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg03, only : fracrefao, fracrefbo, kao, kbo, kao_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg04, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg05, only : fracrefao, fracrefbo, kao, kbo, kao_mo3, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg06, only : fracrefao, kao, kao_mco2, selfrefo, forrefo, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg07, only : fracrefao, fracrefbo, kao, kbo, kao_mco2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg08, only : fracrefao, fracrefbo, kao, kao_mco2, kao_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg09, only : fracrefao, fracrefbo, kao, kbo, kao_mn2o, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg10, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg11, only : fracrefao, fracrefbo, kao, kbo, kao_mo2, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg12, only : fracrefao, kao, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg13, only : fracrefao, fracrefbo, kao, kao_mco2, kao_mco, &
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg14, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg15, only : fracrefao, kao, kao_mn2, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_lw.F:      use rrlw_kg16, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:! * used preprocessing option to replace module_model_constants with mpas_atmphys_constants.
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:! * used preprocessing option to not compile subroutine mynn_bl_init_driver.
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:! 3. v3.4.1: Option to use Kitamura/Canuto modification which removes 
core_atmosphere/physics/physics_wrf/module_bl_mynn.F: use mpas_atmphys_constants, only: &
core_atmosphere/physics/physics_wrf/module_bl_mynn.F: use error_function, only: erf
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:  USE module_model_constants, only: &
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:  USE module_state_description, only: param_first_scalar, &
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:  !Use Canuto/Kitamura mod (remove Ric and negative TKE) (1:yes, 0:no)
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:  !Use BouLac mixing length in free atmosphere (1:yes, 0:no)
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:!       bsh             : no longer used
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:!                         at first, used for computing elt
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:       !   IF ( zwk <= z_m ) THEN  ! use original cns
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:          !add blending to use BouLac mixing length in free atmos;
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:        dld(iz) = min(dld(iz),zw(iz+1))!not used in PBL anyway, only free atmos
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:       !BUOYANCY FACTORS: wherever vt and vq are used, there is a
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:! if qcg not used then assume constant flux in the surface layer
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:!and replace with fogdes code + remove use of qcg:
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:    ! 1D (local) budget arrays are used for passing between subroutines.
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:          ! water is used instead of CH.
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:    !a hybrid definition is implemented that uses both methods, weighting
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:    !A variable tke threshold (TKEeps) is used since no hard-wired
core_atmosphere/physics/physics_wrf/module_bl_mynn.F:    !FOR STABLE BOUNDARY LAYERS, USE TKE METHOD TO COMPLEMENT THE
core_atmosphere/physics/physics_wrf/module_sf_bem.F:!  Variables and constants used in the BEM module
core_atmosphere/physics/physics_wrf/module_sf_bem.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_bem.F:	real transmit   !transmittance of the direct/diffused radiation
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!and should not be used with other cloud microphysics schemes.
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F: use mpas_atmphys_functions,only: rslf,rsif
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!     USE module_mp_thompson   , ONLY : rsif, rslf
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!..Find tropopause height, best surrogate, because we would not really
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!.. near typical (mid-latitude) tropopause height.  Since messy data
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!.. tropopause height, as would any other diagnostic, so ensure resulting
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!     print*, ' FOUND TROPOPAUSE ', k_tropo, ' near ', ht2, ' m'
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!       WRITE (dbg_msg,*) 'DEBUG-GT: FOUND TROPOPAUSE ', k_tropo, ' near ', ht2, ' m'
core_atmosphere/physics/physics_wrf/module_mp_thompson_cldfra3.F:!..Eliminate possible fractional clouds above supposed tropopause.
core_atmosphere/physics/physics_wrf/module_sf_oml.F:! MPAS version (pulled out all the unused WRF indices)  WCS 20140611
core_atmosphere/physics/physics_wrf/module_mp_radar.F:!.. intended for use when Rayleigh scattering principles dominate and
core_atmosphere/physics/physics_wrf/module_mp_radar.F:!.. significant portion.  Therefore, it is well-suited to use with
core_atmosphere/physics/physics_wrf/module_mp_radar.F:!.. assumptions. The code is quite slow because it does the reflectivity
core_atmosphere/physics/physics_wrf/module_mp_radar.F:      USE mpas_atmphys_functions
core_atmosphere/physics/physics_wrf/module_mp_radar.F:      USE mpas_atmphys_utilities
core_atmosphere/physics/physics_wrf/module_mp_radar.F:      USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:! * used preprocessing option to replace module_model_constants with mpas_atmphys_constants.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:! * used preprocessing option to include the actual mean distance between cell centers.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:! * used "dummy" variables in the call to mym_condensation.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:!4) Uses Monin-Obukhov flux-profile relationships more consistent with
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:!   those used in the MYNN PBL code.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:!             =2: Modified Yang et al (2002, 2008) - generalized for all landuse
core_atmosphere/physics/physics_wrf/module_sf_mynn.F: use mpas_atmphys_constants,only: p1000mb => P0,cp,xlv,ep_2
core_atmosphere/physics/physics_wrf/module_sf_mynn.F: use module_bl_mynn,only: tv0,mym_condensation
core_atmosphere/physics/physics_wrf/module_sf_mynn.F: use module_sf_sfclay,only: sfclayinit
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:  USE module_model_constants, only: &
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:  USE module_sf_sfclay, ONLY: sfclayinit
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:  USE module_bl_mynn,   only: tv0, mym_condensation
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:  USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:!               used to couple with TKE scheme but not in MYNN.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:!    only)      =2: Modified Yang et al (2002, 2008) - generalized for all landuse
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:         ! QGH CHANGED TO USE LOWEST-LEVEL AIR TEMP CONSISTENT WITH MYJSFC CHANGE
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:         !  Use Beljaars over land, old MM5 (Wyngaard) formula over water
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:            !formula, so switch to Beljaars for water, but use VCONVC = 1.25,
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:                   !PAN ET AL (1994), but PSIT FROM ZILI WILL BE USED.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:                   !Original MYNN in WRF-ARW used this form:
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:           !CALL PSI_Suselj_Sood_2010(PSIM(I),PSIH(I),ZOL(I))
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:           !CALL PSI_Suselj_Sood_2010(PSIM(I),PSIH(I),ZOL(I))
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:      ! Compute u* without vconv for use in HFX calc when isftcflx > 0           
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:      ! If the lowest model level is close to 10-m, use it 
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:      !THESE ARE USED FOR 2-M DIAGNOSTICS ONLY
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !data. The formula for land uses a constant ratio (Z_0/7.4) taken
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !is used for flows with Ren < 2. 
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !Note that this formulation should not be used with the Davis et al. 
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !(2008) formulation for Zo, because that formulation produces much 
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !This is for use over water only.
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:          !FOR SMOOTH SEAS, USE GARRATT
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:          !FOR ROUGH SEAS, USE FAIRALL
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !This modified form uses beta = 0.5 and Renc = 350, so zt generally 
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !This should only be used over land!
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !This should only be used over snow/ice!
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    ! with Dyer and Hicks (1970/74?). This formulation is used for
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:          WRITE(*,*)"        be used in the stable regime!"
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:          WRITE(*,*)"        be used in the stable regime!"
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    SUBROUTINE PSI_Suselj_Sood_2010(psi_m, psi_h, zL)
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    !Suselj and Sood (2010) applied the surface layer length scales
core_atmosphere/physics/physics_wrf/module_sf_mynn.F:    END SUBROUTINE PSI_Suselj_Sood_2010
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:use mpas_atmphys_constants,only: CP=>cp,R_D=>R_d,XLF=>xlf,XLV=>xlv,RHOWATER=>rho_w,STBOLT=>stbolt,KARMAN=>karman
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:USE module_model_constants, only : CP, R_D, XLF, XLV, RHOWATER, STBOLT, KARMAN
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!modified for use with FASDAS 
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:                       LLANDUSE, LSOIL,                                 &    !CL
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:                       RDLAI2D,USEMONALB,                               &
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!   LLANDUSE  (=USGS, using USGS landuse classification)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!   COSZ       Solar zenith angle (not used for now)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!   PRCPRAIN   Liquid-precipitation rate (KG M-2 S-1) (not used)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! SOLARDIRECT  Direct component of downward solar radiation (W M-2) (not used)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!                (NOT YET USED, BUT PASSED TO REDPRM FOR FUTURE USE IN
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!   Q1         Effective mixing ratio at surface (kg kg-1), used for
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:      CHARACTER (LEN=256), INTENT(IN)::  LLANDUSE, LSOIL
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:      LOGICAL, INTENT(IN) :: USEMONALB
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:                         ALBEDOMAX, Z0MIN, Z0MAX, CSOIL, PTU, LLANDUSE,    &
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:            IF (.NOT. USEMONALB) THEN
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:            IF(.NOT. USEMONALB) then
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:               if (.not. USEMONALB) then
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:               if (.not. USEMONALB) then
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE SOIL DEPTH AS WEIGHTING FACTOR
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE ROOT DISTRIBUTION AS WEIGHTING FACTOR
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE SOIL DEPTH AS WEIGHTING FACTOR
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE ROOT DISTRIBUTION AS WEIGHTING FACTOR
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! RESISTANCE (RC) TO PLANT COEFFICIENT (PC) TO BE USED WITH POTENTIAL
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! LIMITS ON PARAMETER B: B < 5.5  (use parameter BLIM)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! BOUNDS USEFUL FOR MATHEMATICAL SOLUTION.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! IF MORE THAN 10 ITERATIONS, USE EXPLICIT METHOD (CK=0 APPROX.)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:             PRINT *,'Flerchinger USEd in NEW version. Iterations=',NLOG
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! LAYERS.  THEN CALCULATE THE SUBSURFACE HEAT FLUX. USE THE TEMP
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! BOTTOM OF FIRST SOIL LAYER FOR USE IN HEAT FLUX CONSTRAINT APPLIED TO
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! SET TEMP "TSURF" AT TOP OF SOIL COLUMN (FOR USE IN FREEZING SOIL
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CALCULATE TEMPERATURE AT BOTTOM INTERFACE OF 1ST SOIL LAYER FOR USE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CREATE FINITE DIFFERENCE VALUES FOR USE IN ROSR12 ROUTINE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! DIFFUSIVITY THAT IS LATER USED IN HRT TO COMPUTE SUB SFC HEAT FLUX
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! SHFLX BELOW) FOR USE IN COMPUTING SUBSURFACE HEAT FLUX IN HRT
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! THEY ARE NOT USED HERE IN SNOPAC.  FLX2 (FREEZING RAIN HEAT FLUX) WAS
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CALLING ROUTINE FOR LATER USE.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! EFFECTS CAUSED BY FALLING PRECIPITATION.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:                         ALBEDOMAX, Z0MIN, Z0MAX, CSOIL, PTU, LLANDUSE,    &
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!                RGL: Parameters used in radiation stress function
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!                 HS: Parameter used in vapor pressure deficit functio
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!             CFACTR: Parameter used in the canopy inteception calculation
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!  Modified by F. Chen (12/22/97)  to use the STATSGO soil map
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!       SBETA_DATA: parameter used to caluculate vegetation effect on soil heat
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!       FXEXP_DAT:  soil evaporation exponent used in DEVAP
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:      CHARACTER (LEN=256), INTENT(IN)::  LLANDUSE, LSOIL
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:                     FATAL_ERROR( 'Warning: too many input landuse types' )
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:      PTU = 0.    ! (not used yet) to satisify intent(out)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!   SOIL MOISTURE VALUE OF THE TOP SOIL LAYER THAT CAN ARISE BECAUSE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! GRASS, CROP, AND SHRUB: MULTIPLY 0.4 BY ZTOPV AND ZBOTV BECAUSE 
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! GAMA IS USED TO DIVIDE FVB INTO TWO PARTS:
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! ROUTINE FRH2O USE FORM OF EQN IN KELVIN UNITS.)
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CALCULATE PHASE-CHANGE HEAT SOURCE/SINK TERM FOR USE IN ROUTINE HRT
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:         IF(UA_PHYS) ESNOW = ETPN*SNCOVR   ! USE ADJUSTED ETP
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! EFFECTIVE SNOW DEPTH.  REVISE THE SKIN TEMP BECAUSE IT WOULD HAVE CHGD
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! EX FOR USE IN SMFLX.  ADJUSTMENT TO T1 TO ACCOUNT FOR SNOW PATCHES.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! VAPOR PRESSURE) VALUE OF 6.11E+2 USED HERE IS THAT VALID AT FRZZING
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! IF NON-GLACIAL LAND, ADD SNOWMELT RATE (EX) TO PRECIP RATE TO BE USED
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! SNOW TOP SURFACE.  T11 IS A DUMMY ARGUEMENT SO WE WILL NOT USE THE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USED  IN ANY SUBSEQUENT CALCULATIONS. RATHER, THEY ARE DUMMY VARIABLES
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!DJG NDHMS/WRF-Hydro edit... Variables used in OV routing infiltration calcs
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:!DJG Use previously merged Precip and Sfchead for infil. cap. calc.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CALC SOME PARTIAL PRODUCTS FOR LATER USE IN CALC'NG RHSTT
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! CALC A PARTIAL PRODUCT FOR LATER USE IN CALC'NG RHSTT
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE SURFACE TEMPERATURE ON THE TOP OF THE FIRST LAYER
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE DEPTH OF THE CONSTANT BOTTOM TEMPERATURE WHEN INTERPOLATE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! OTHERWISE USE A CONSTANT VALUE WHICH WORKS WELL WITH MOST SOILS
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE AS IN PETERS-LIDARD, 1998 (MODIF. FROM JOHANSEN, 1975).
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! USE K = KDRY
core_atmosphere/physics/physics_wrf/module_sf_noahlsm.F:! use the Mccumber and Pielke approach for silt loam (4), sandy loam (3)
core_atmosphere/physics/physics_wrf/module_cam_support.F:  use mpas_atmphys_utilities,only:physics_error_fatal
core_atmosphere/physics/physics_wrf/module_cam_support.F:  use module_state_description, only: param_num_moist
core_atmosphere/physics/physics_wrf/module_cam_support.F:  use module_wrf_error
core_atmosphere/physics/physics_wrf/module_cam_support.F:  use shr_kind_mod
core_atmosphere/physics/physics_wrf/module_cam_support.F:                                                 !qmin is never used in module_ra_cam_support.
core_atmosphere/physics/physics_wrf/module_cam_support.F:                                    !that can be used to send messages via wrf_message, etc.
core_atmosphere/physics/physics_wrf/module_cam_support.F:! From cam_pio_utils (used in camuwpbl_driver module)...
core_atmosphere/physics/physics_wrf/LICENSE:use by any person or entity for any purpose without any fee or
core_atmosphere/physics/physics_wrf/LICENSE:charge. UCAR requests that any WRF user include this notice on
core_atmosphere/physics/physics_wrf/LICENSE:connection with the access, use or performance of WRF, including
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:use mpas_atmphys_utilities, only: physics_message,physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:  use module_sf_noah_seaice
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:    USE module_state_description, ONLY : NOAHUCMSCHEME
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:    USE module_state_description, ONLY : BEPSCHEME
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:    USE module_state_description, ONLY : BEP_BEMSCHEME
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:              ! Use uniform sea-ice thickness.
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:              ! Use the sea-ice as read in from the input files.
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          ! Use mid-day albedo to determine net downward solar (no solar zenith angle correction)
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          ! Pressure in middle of lowest layer.  Why don't we use the true surface pressure?
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          ! Are there places where we would need to use the true surface pressure?
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:              ! Snow depth on sea ice comes from a 2D array, SNOWSI, bounded by user-specified
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:             ! If snow on surface, use ice saturation properties
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:                ! Cold ground temps, use ice saturation only
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          !       CH          -- but the result isn't used for anything.
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          !       RIBB        -- but the result isn't used for anything.  
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          FDOWN            = -1.E36  ! Returned value unused.  Might as well be local to SFLX_SEAICE ?
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          ESNOW            = -1.E36  ! Returned value unused.  Might as well be local to SFLX_SEAICE ?
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice_drv.F:          DEW              = -1.E36  ! Returned value unused.  Might as well be local to SFLX_SEAICE ?
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!USE module_model_constants
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F: USE module_sf_urban
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F: USE module_sf_bem
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!  Dimension for the array used in the BEP module
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!  Constant used in the BEP module
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:      real latent             ! Latent heat of vaporization [J/kg] (used in BEM)
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!New variables used for BEM
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!   fww_u,fwg_u,fgw_u,fsw_u,fsg_u are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:! 1D array used for the input and output of the routine "urban"
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:! arrays used to collapse indexes
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!    fww,fwg,fgw,fsw,fsg are the view factors used to compute the long and 
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!New variables uses in BEM
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:! Fix some usefull parameters for the computation of the sources or sinks
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!    This routine prepare some usefull parameters       
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!   fww,fwg,fgw,fsw,fsg are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:      integer nurb ! number of urban classes used
core_atmosphere/physics/physics_wrf/module_sf_bep_bem.F:!   fww_u,fwg_u,fgw_u,fsw_u,fsg_u are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_bl_ysu.F:!     this routine uses an implicit approach for vertical flux
core_atmosphere/physics/physics_wrf/module_bl_ysu.F:!      Use Beljaars over land
core_atmosphere/physics/physics_wrf/module_bl_ysu.F:      !a hybrid definition is implemented that uses both methods, weighting
core_atmosphere/physics/physics_wrf/module_bl_ysu.F:      !A variable tke threshold (TKEeps) is used since no hard-wired
core_atmosphere/physics/physics_wrf/module_bl_ysu.F:      !FOR STABLE BOUNDARY LAYERS, USE TKE METHOD TO COMPLEMENT THE
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:!        the new Tiedtke scheme is similar to the Tiedtke scheme used in REGCM4 and ECMWF cy40r1.
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:     use mpas_atmphys_constants, only: rd=>R_d, rv=>R_v, &
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:     use module_model_constants, only:rd=>r_d, rv=>r_v, &
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:! use or not.
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:!       cuinin:  initializes values at vertical grid used in cu-parametr.
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:! avoid negative humidities near cloud top because gradient of precip flux
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:! the next levels, we use the variables at the first level as initial values
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:! the next levels, we use the variables at the first level as initial values
core_atmosphere/physics/physics_wrf/module_cu_ntiedtke.F:! compute organized entrainment for use at next level                     
core_atmosphere/physics/physics_wrf/module_sf_bep.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_bep.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!USE module_model_constants
core_atmosphere/physics/physics_wrf/module_sf_bep.F: USE module_sf_urban
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!  Dimension for the array used in the BEP module
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!  Constant used in the BEP module
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!   fww_u,fwg_u,fgw_u,fsw_u,fsg_u are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_sf_bep.F:! 1D array used for the input and output of the routine "urban"
core_atmosphere/physics/physics_wrf/module_sf_bep.F:! arrays used to collapse indexes
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!    fww,fwg,fgw,fsw,fsg are the view factors used to compute the long and 
core_atmosphere/physics/physics_wrf/module_sf_bep.F:! Fix some usefull parameters for the computation of the sources or sinks
core_atmosphere/physics/physics_wrf/module_sf_bep.F:! computation of the mean road temperature tsk (this value could be used 
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!    This routine prepare some usefull parameters       
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!   fww,fwg,fgw,fsw,fsg are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_sf_bep.F:      integer nurb ! number of urban classes used
core_atmosphere/physics/physics_wrf/module_sf_bep.F:!   fww_u,fwg_u,fgw_u,fsw_u,fsg_u are the view factors used to compute the long wave
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!     by Arakawa et al (2011, ACP). It currently does not use  !
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!     -> corrected the calculation of the moisture convergence. the conversion of w to omeg now uses the air
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F: integer, parameter:: use_excess    = 0
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F: integer, parameter:: use_excess_sh = 0
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:    if(use_excess.gt.0 .or. use_excess_sh.gt.0)then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:     endif  ! use_excess
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:                 aeroevap,itf,jtf,ktf,training,xmb,use_excess,its,   &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:               use_excess_sh,its,ite,jts,jte,kts,kte)
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              use_excess,its,ite, jts,jte, kts,kte                  &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              use_excess,its,ite, jts,jte, kts,kte                                &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        autoconv,aeroevap,itf,jtf,ktf,ktau,training,use_excess,        &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:  ! massfln = downdraft mass flux ensembles used in next timestep
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:         if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        else if(use_excess <= 1)then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:         hkb(i)=he_cup(i,k22(i)) ! +float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:         hkbo(i)=heo_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:           xl,cp,ztexec,zqexec,use_excess,       &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:           ZQEXEC,use_excess,ccn,rho,up_massentr,up_massdetr,psum,psumh,&
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:! these three are only used at or near mass detrainment and/or entrainment levels
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!        if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!        else if(use_excess <= 1) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!            xhkb(i)=xhe_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:           xl,cp,ztexec,zqexec,use_excess,       &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:           xl,cp,ztexec,zqexec,use_excess,       &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:  ! massfln = downdraft mass flux ensembles used in next timestep
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!!!!    NOT USED FOR "NORMAL" APPLICATION (maxens=1)
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              xl,cp,ztexec,zqexec,use_excess,       &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        use_excess,itf,jtf,ktf,           &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:         if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        else if(use_excess <= 1)then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:             hkb(i)=he_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:! --- Now use proper count of how many closures were actually
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!       used in cup_forcing_ens (including screening of some
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              ZQEXEC,use_excess,ccn,rho, &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:                                  use_excess,itest,autoconv,aeroevap,itf,jtf,ktf,           &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:      if(use_excess < 2 ) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        qc(i,k)=qe_cup(i,k22(i))+float(use_excess)*zqexec(i)
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        qch(i,k)=qe_cup(i,k22(i))+float(use_excess)*zqexec(i)
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:      else if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:      endif  ! use_excess
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:! first calculate for average conditions, used in cup_dd_edt!
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              use_excess,its,ite, jts,jte, kts,kte                                &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:              use_excess,its,ite, jts,jte, kts,kte                                &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        autoconv,itf,jtf,ktf,ktau,use_excess,        &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:  ! massfln = downdraft mass flux ensembles used in next timestep
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:         if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:        else if(use_excess <= 1) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:             hkb(i)=he_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:             hkbo(i)=heo_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:             qkbo(i)=qo_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i))
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:           xl,cp,ztexec,zqexec,use_excess,       &
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:! these three are only used at or near mass detrainment and/or entrainment levels
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!        if(use_excess == 2) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!        else if(use_excess <= 1) then
core_atmosphere/physics/physics_wrf/module_cu_gf.mpas.F:!            xhkb(i)=xhe_cup(i,k22(i))+float(use_excess)*(xl*zqexec(i)+cp*ztexec(i))
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F: use mpas_kind_types
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:! Method: Use pressure values to determine interpolation levels
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:!  use phys_grid,     only: get_lat_all_p, get_lon_all_p
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:!  use comozp
core_atmosphere/physics/physics_wrf/module_ra_rrtmg_vinterp.F:!  use abortutils, only: endrun
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:use mpas_atmphys_constants,only: cp,R_D=>R_d,XLF,XLV,RHOWATER=>rho_w,STBOLT
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:use module_model_constants, only : CP, R_D, XLF, XLV, RHOWATER, STBOLT
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:  use module_sf_noahlsm, only : RD, SIGMA, CPH2O, CPICE, LSUBF, EMISSI_S, &
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:!   Q1         Effective mixing ratio at surface (kg kg-1), used for
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:         ! Define a snow-cover fraction for use only with Mills sea-ice albedo
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! SET ICE PACK DEPTH.  USE TBOT AS ICE PACK LOWER BOUNDARY TEMPERATURE
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! RECALC/ADJUST THE SOIL HEAT FLUX.  USE THE GRADIENT AND FLUX TO CALC
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! CALLING ROUTINE FOR LATER USE.
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! EFFECTS CAUSED BY FALLING PRECIPITATION.
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! EFFECTIVE SNOW DEPTH.  REVISE THE SKIN TEMP BECAUSE IT WOULD HAVE CHGD
core_atmosphere/physics/physics_wrf/module_sf_noah_seaice.F:! VAPOR PRESSURE) VALUE OF 6.11E+2 USED HERE IS THAT VALID AT FRZZING
core_atmosphere/physics/physics_wrf/module_ra_cam.F:  use module_ra_cam_support
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   USE mpas_atmphys_utilities
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), dimension(  1:ite-its+1 ) :: solsd         ! Downward solar rad onto surface (sw diffuse)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), dimension(  1:ite-its+1 ) :: solld         ! Downward solar rad onto surface (lw diffuse)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! For Ferrier (note that currently Ferrier has QI, so this section will not be used)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! use same albedo for direct and diffuse
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   USE module_state_description
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   !USE module_configure
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!    Need to use actual month/day info to compute julian.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use volcanicmass, only: get_volcanic_mass
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use timeinterp, only: getfactors
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!    Need to use actual month/day info to compute julian.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! use constituents, only: ppcnst, cnst_get_ind
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! use history, only: outfld
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use pmgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use prescribed_aerosols, only: strat_volcanic
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!     use pmgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Radiation uses cgs units, so conversions must be done from
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use pspect
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use commap
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use history, only: outfld
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use constituents, only: ppcnst, cnst_get_ind
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use prescribed_aerosols, only: get_aerosol, naer_all, aerosol_diagnostics, &
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use physics_types, only: physics_state
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use wv_saturation, only: aqsat
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use chemistry,    only: trace_gas
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use physconst, only: cpair, epsilo
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use aer_optics, only: idxVIS
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use aerosol_intr, only: set_aerosol_from_prognostics
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(in) :: asdif(pcols)         ! albedo shortwave diffuse
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(in) :: aldif(pcols)         ! albedo longwave diffuse
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(out) :: solsd(pcols)         ! Downward solar rad onto surface (sw diffuse)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(out) :: solld(pcols)         ! Downward solar rad onto surface (lw diffuse)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Do longwave computation. If not implementing greenhouse gas code then
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! first specify trace gas mixing ratios. If greenhouse gas code then:
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!   use physics_types, only: physics_state
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!   use history,       only: outfld
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!   use pkg_cldoptics, only: cldefr, cldems, cldovrlap, cldclw
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! h2o  ....  Uses nonisothermal emissivity method for water vapor from
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! co2  ....  Uses absorptance parameterization of the 15 micro-meter
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! o3   ....  Uses absorptance parameterization of the 9.6 micro-meter
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! ch4  ....  Uses a broad band model for the 7.7 micron band of methane.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! n20  ....  Uses a broad band model for the 7.8, 8.6 and 17.0 micron
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! cfc11 ...  Uses a quasi-linear model for the 9.2, 10.7, 11.8 and 12.5
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! cfc12 ...  Uses a quasi-linear model for the 8.6, 9.1, 10.8 and 11.2
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) k21                ! Exponential coefficient used to calculate
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) k22                ! Exponential coefficient used to calculate
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) sqti(pcols)        ! Used to store sqrt of mean temperature
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) wco2               ! Constants used to define co2 pathlength
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) tpath              ! Path temperature used in co2 band model
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) dtym10             ! T - 260 used in eq(9) and (10) table A3a
core_atmosphere/physics/physics_wrf/module_ra_cam.F:         abstot(:,k1,k2) = inf    ! set unused portions for lf95 restart write
core_atmosphere/physics/physics_wrf/module_ra_cam.F:         absnxt(:,k1,k2) = inf    ! set unused portions for lf95 restart write
core_atmosphere/physics/physics_wrf/module_ra_cam.F:      abstot(:,k,k) = inf         ! set unused portions for lf95 restart write
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!                in abso(i,1).  This used to be in abso(i,4)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!                in abso(i,1).  This used to be in abso(i,4)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Note: because we are dealing with the nearest layer,
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! H2O  ....  Uses nonisothermal emissivity method for water vapor from
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! CO2  ....  Uses absorptance parameterization of the 15 micro-meter
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! O3   ....  Uses absorptance parameterization of the 9.6 micro-meter
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! ch4  ....  Uses a broad band model for the 7.7 micron band of methane.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! n20  ....  Uses a broad band model for the 7.8, 8.6 and 17.0 micron
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! cfc11 ...  Uses a quasi-linear model for the 9.2, 10.7, 11.8 and 12.5
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! cfc12 ...  Uses a quasi-linear model for the 8.6, 9.1, 10.8 and 11.2
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) tpathe                  ! Used to compute h2o emissivity
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) k21(pcols)              ! Exponential coefficient used to calc
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) k22(pcols)              ! Exponential coefficient used to calc
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) co2plk(pcols)            ! Used to compute co2 emissivity
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) sum(pcols)               ! Used to calculate path temperature
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) pi                       ! Pressure used in co2 mean line width
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) wco2                     ! Consts used to define co2 pathlength
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) tpath                    ! Path temp used in co2 band model
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! <Describe the algorithm(s) used in the routine.>
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! (not available for bottom layer, so use ground temperature)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Uses broad band absorptivity/emissivity method to compute clear sky;
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! general) than the model radiation frequency; uses previously computed
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!       used in the rest of the model.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use radae, only: nbands, radems, radabs, radtpl, abstot_3d, absnxt_3d, emstot_3d
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use volcrad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Compute sums used in integrals (all longitude points)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!    nxsk == nxs(i,irgn) then use the list constructed for previous k
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!    nxsk == nxs(i,irgn) then use the list constructed for previous k
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! cgs units are used.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ghg_surfvals, only: co2mmr
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use prescribed_aerosols, only: idxBG, idxSUL, idxSSLT, idxOCPHO, idxBCPHO, idxOCPHI, idxBCPHI, &
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use aer_optics, only: nrh, ndstsz, ksul, wsul, gsul, &
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use abortutils, only: endrun
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(in) :: asdif(pcols)     ! 0.2-0.7 micro-meter srfc alb: diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(in) :: aldif(pcols)     ! 0.7-5.0 micro-meter srfc alb: diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(out) :: solsd(pcols)     ! Diffuse solar rad on surface (< 0.7)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(out) :: solld(pcols)     ! Diffuse solar rad on surface (>= 0.7)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) cld0             ! 1 - (cld amt) used to make wstr, cstr, nstr
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) xrdnd            ! diffuse reflectivity for layer above
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) xrupd            ! diffuse reflectivity for layer below
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) yrdnd            ! diffuse reflectivity for layer above
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) yrupd            ! diffuse reflectivity for layer below
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) zrdnd            ! diffuse reflectivity for layer above
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) zrupd            ! diffuse reflectivity for layer below
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) albdif(pcols,nspint) ! Current spc intrvl srf alb to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! fswdn are not used in the computation,but are retained for future use.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! local variables used for the external mixing of aerosol species
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) ptho2            ! Used to compute mass path of o2
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) ptho3            ! Used to compute mass path of o3
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) pthco2           ! Used to compute mass path of co2
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) pthh2o           ! Used to compute mass path of h2o
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) rdif(nspint,pcols,0:pver) ! Layer reflectivity to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) tdif(nspint,pcols,0:pver) ! Layer transmission to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) rdifc(nspint,pcols,0:pver) ! Clear Layer reflec. to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) tdifc(nspint,pcols,0:pver) ! Clear Layer trans. to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Bulk properties used during the clear-sky calculation.
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! moved to here from the module storage above, because these have to be thread-private.  JM 20100217
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!WRF use SOLCON (MKS) calculated outside
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Use index 1 (0.25 to 0.69 micrometers) for visible
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Use index 2 (0.69 - 1.19 micrometers) for near-infrared
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Use index 3 (1.19 to 2.38 micrometers) for near-infrared
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Use index 4 (2.38 to 4.00 micrometers) for near-infrared
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!   w_dst_tot, g_dst_tot, w_dst_tot are currently not used anywhere
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!   but calculate them anyway for future use
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! (2. The adding method is used to
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! compute the reflectivity and transmissivity to direct and diffuse
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! used to identify the corresponding minimum subset of terms in 
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Most of the indexing information calculated here is used in steps 2-3
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! If cloud in layer, use cloudy layer radiative properties
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! If clear layer, use clear-sky layer radiative properties
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! If cloud in layer, use cloudy layer radiative properties
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! If clear layer, use clear-sky layer radiative properties
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! used in step 2 to combine the bulk radiative properties 
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(inout) :: rdif(nspint,pcols,0:pver)   ! Layer reflectivity to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(inout) :: tdif(nspint,pcols,0:pver)   ! Layer transmission to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(inout) :: rdifc(nspint,pcols,0:pver)  ! Clear layer reflec. to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8), intent(inout) :: tdifc(nspint,pcols,0:pver)  ! Clear layer trans. to diffuse rad
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) u                    ! Term in diffuse reflect and
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   real(r8) n                    ! Term in diffuse reflect and
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!    direct and diffuse radiation incident from above, under clear
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use time_manager, only: get_curr_calday
core_atmosphere/physics/physics_wrf/module_ra_cam.F:   eccf = 1. ! declared intent(out) so fill a value (not used in WRF)
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use comozp
core_atmosphere/physics/physics_wrf/module_ra_cam.F:! Method: Use pressure values to determine interpolation levels
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use ppgrid
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use phys_grid,     only: get_lat_all_p, get_lon_all_p
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use comozp
core_atmosphere/physics/physics_wrf/module_ra_cam.F:!  use abortutils, only: endrun
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_sf_noahlsm,  only: SFLX, XLF, XLV, CP, R_D, RHOWATER, NATURAL, SHDTBL, LUTYPE, SLTYPE, STBOLT, &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_sf_urban,    only: urban, oasis, IRI_SCHEME
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_sf_noahlsm_glacial_only, only: sflx_glacial
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_sf_bep,      only: bep
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_sf_bep_bem,  only: bep_bem
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:use mpas_atmphys_date_time, only: cal_mon_day
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F: use module_ra_gfdleta,  only: cal_mon_day
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F: use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  USE module_data_gocart_dust
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                  RDLAI2D,USEMONALB,                            &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:     LOGICAL, intent(in) :: USEMONALB
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:     REAL :: SSGQ_URB     ! downward diffuse short wave radiation  [W/m/m]
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:! use mid-day albedo to determine net downward solar (no solar zenith angle correction)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:! snow on surface (use ice saturation properties)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:! cold ground temps, use ice saturation only
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:          ! Land-ice or land points use the usual deep-soil temperature.
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 DUMMY,DUMMY, DUMMY,                               &    !F PRCPRAIN not used
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 RDLAI2D,USEMONALB,                                &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:       SOILM = 0.0 !BSINGH(PNNL)- SOILM is undefined for this case, it is used for diagnostics so setting it to zero
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:! Calculate momentum flux from rural surface for use with multi-layer UCM (Martilli et al. 2002)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:! now use iterative solution for liquid soil water content using
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:        USE module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:!          ALBEDO, amd Z0 are specified in LAND-USE TABLE; and SHDFAC is
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:!                RGL: Parameters used in radiation stress function
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:!                 HS: Parameter used in vapor pressure deficit functio
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:!             CFACTR: Parameter used in the canopy inteception calculati
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:              WRITE( mess , * ) 'LANDUSE TYPE = ' // TRIM ( LUTYPE ) // ' FOUND', LUCATS,' CATEGORIES'
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:             CALL wrf_error_fatal ("This could be caused by using an older VEGPARM.TBL file with a newer WRF source code.")
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:           CALL wrf_error_fatal ("Land Use Dataset '"//MMINLU//"' not found in VEGPARM.TBL.")
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                  RDLAI2D,USEMONALB,                            &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 NLCAT,landusef,landusef2,                       & ! danli mosaic
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:     LOGICAL, intent(in) :: USEMONALB
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:     REAL :: SSGQ_URB     ! downward diffuse short wave radiation  [W/m/m]
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  REAL, DIMENSION( ims:ime, NLCAT, jms:jme ), INTENT(IN) :: landusef 
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  REAL, DIMENSION( ims:ime, NLCAT, jms:jme ), INTENT(INOUT) ::landusef2 
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! use mid-day albedo to determine net downward solar (no solar zenith angle correction)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! snow on surface (use ice saturation properties)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! cold ground temps, use ice saturation only
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                ! Land-ice or land points use the usual deep-soil temperature.
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       DUMMY,DUMMY, DUMMY,                               &    !F PRCPRAIN not used
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       RDLAI2D,USEMONALB,                                &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:             SOILM = 0.0 !BSINGH(PNNL)- SOILM is undefined for this case, it is used for diagnostics so setting it to zero
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! Calculate momentum flux from rural surface for use with multi-layer UCM (Martilli et al. 2002)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                  print*, 'mosaic_cat_index',mosaic_cat_index(I,mosaic_i,J), 'landusef2',landusef2(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                  FAREA  = landusef2(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! use mid-day albedo to determine net downward solar (no solar zenith angle correction)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! snow on surface (use ice saturation properties)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! cold ground temps, use ice saturation only
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                ! Land-ice or land points use the usual deep-soil temperature.
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       DUMMY,DUMMY, DUMMY,                               &    !F PRCPRAIN not used
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       RDLAI2D,USEMONALB,                                &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:             SOILM = 0.0 !BSINGH(PNNL)- SOILM is undefined for this case, it is used for diagnostics so setting it to zero
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:      ! Calculate momentum flux from rural surface for use with multi-layer UCM (Martilli et al. 2002)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                  landusef,landusef2,NLCAT,num_soil_layers        & 
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  REAL, DIMENSION( ims:ime, NLCAT, jms:jme ) , INTENT(IN)::   LANDUSEF
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:  REAL, DIMENSION( ims:ime, NLCAT, jms:jme ) , INTENT(INOUT)::   LANDUSEF2
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:              LANDUSEF2(i,mosaic_i,j)=LANDUSEF(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:            IF(LANDUSEF2(i,mosaic_i, j) < LANDUSEF2(i,mosaic_i+1, j)  ) THEN
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:               Temp = LANDUSEF2(i,mosaic_i, j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:               LANDUSEF2(i,mosaic_i, j)=LANDUSEF2(i,mosaic_i+1, j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:               LANDUSEF2(i,mosaic_i+1, j)=Temp            
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       Temp4=LANDUSEF2(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       LANDUSEF2(i,mosaic_i:NLCAT-1,j)=LANDUSEF2(i,mosaic_i+1:NLCAT,j)                       
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                       LANDUSEF2(i,NLCAT,j)=Temp4
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:          ! xland < 1.5 but the dominant land use category based on our calculation is water
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:           ! xland < 1.5 but the dominant land use category based on the geogrid calculation is water, this must be wrong
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:              CALL wrf_message("xland < 1.5 but the dominant land use category based on our calculation is water."//&
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                   "In addition, the dominant land use category based on the geogrid calculation is water, this must be wrong")
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:           ! xland < 1.5,   the dominant land use category based on our calculation is water, but based on the geogrid calculation is not water, which might be due to the inconsistence between land use data and land-sea mask
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	       Temp4=LANDUSEF2(i,1,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	       LANDUSEF2(i,1:NLCAT-1,j)=LANDUSEF2(i,2:NLCAT,j)                       
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	       LANDUSEF2(i,NLCAT,j)=Temp4
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:              CALL wrf_message("xland < 1.5 but the dominant land use category based on our calculation is water."//&
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                   "this is fine as long as we change our calculation so that the dominant land use category is"//&
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:              WRITE(message_text,fmt='(a,2I6)') 'land use category has been switched, before and after values are ', &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	                   Temp4=LANDUSEF2(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	                   LANDUSEF2(i,mosaic_i:NLCAT-1,j)=LANDUSEF2(i,mosaic_i+1:NLCAT,j)                       
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:	                   LANDUSEF2(i,NLCAT,j)=Temp4
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                ! xland > 1.5 and the dominant land use category based on our calculation is not water
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 ! xland > 1.5 but the dominant land use category based on the geogrid calculation is not water, this must be wrong
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 CALL wrf_message("xland > 1.5 but the dominant land use category based on our calculation is not water."// &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                      "in addition, the dominant land use category based on the geogrid calculation is not water,"//  &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 ! xland > 1.5,   the dominant land use category based on our calculation is not water, but based on the geogrid calculation is water, which might be due to the inconsistence between land use data and land-sea mask
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 CALL wrf_message("xland > 1.5 but the dominant land use category based on our calculation is not water."// &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                      "however, the dominant land use category based on the geogrid calculation is water")
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 CALL wrf_message("This is fine. We do not need to do anyting because in the noaddrv, "//&
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                      "we use xland as a criterion for whether using"// &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                      "mosaic or not when xland > 1.5, no mosaic will be used anyway")
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:               Temp6=Temp6+LANDUSEF2(i,mosaic_i,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:            WRITE (message_text,fmt='(a,2I6,4F8.2)') 'some landusef values at i,j are ', &
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:                 i,j,landusef2(i,1,j),landusef2(i,2,j),landusef2(i,3,j),landusef2(i,4,j)
core_atmosphere/physics/physics_wrf/module_sf_noahdrv.F:            LANDUSEF2(i,1:mosaic_cat, j)=LANDUSEF2(i,1:mosaic_cat,j)*(1/Temp6)
core_atmosphere/physics/physics_wrf/module_sf_urban.F:use mpas_atmphys_utilities, only: physics_message,physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_urban.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_urban.F:!                      single solar downward can be used instead.
core_atmosphere/physics/physics_wrf/module_sf_urban.F:!     SSGQ   [W/m/m] : Diffuse solar radiation at a flat surface
core_atmosphere/physics/physics_wrf/module_sf_urban.F:!     CHS, CHS2 [m/s]    : CH*U at ZA, CH*U at 2 m (not used)
core_atmosphere/physics/physics_wrf/module_sf_urban.F:!  CH_SCHEME [integer 1 or 2] : Sfc exchange scheme used for building wall and road
core_atmosphere/physics/physics_wrf/module_sf_urban.F:   REAL, INTENT(INOUT) :: SSGQ ! downward diffuse short wave radiation  [W/m/m]
core_atmosphere/physics/physics_wrf/module_sf_urban.F:   real,parameter  :: CFACTR   = 0.5    ! Parameter used in the canopy inteception calculation        
core_atmosphere/physics/physics_wrf/module_sf_urban.F:   SQ=SSGQ/697.7/60.         ! downward diffuse short wave radiation
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! Must use multiple layers scheme (TS_SCHEME=1)
core_atmosphere/physics/physics_wrf/module_sf_urban.F:!  bisection (not used)
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! BOTTOM OF FIRST SOIL LAYER FOR USE IN HEAT FLUX CONSTRAINT
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! CREATE FINITE DIFFERENCE VALUES FOR USE IN ROSR12 ROUTINE
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! USE SURFACE TEMPERATURE ON THE TOP OF THE FIRST LAYER
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! USE DEPTH OF THE CONSTANT BOTTOM TEMPERATURE WHEN INTERPOLATE
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! OTHERWISE USE A CONSTANT VALUE WHICH WORKS WELL WITH MOST SOILS
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! USE AS IN PETERS-LIDARD, 1998 (MODIF. FROM JOHANSEN, 1975).
core_atmosphere/physics/physics_wrf/module_sf_urban.F:! USE K = KDRY
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:use mpas_atmphys_constants
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:use mpas_atmphys_utilities, only: physics_error_fatal
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:use module_model_constants
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:use module_wrf_error
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:  USE module_sf_noahlsm, ONLY : RD, SIGMA, CPH2O, CPICE, LSUBF, EMISSI_S, ROSR12
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:  USE module_sf_noahlsm, ONLY : LVCOEF_DATA
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:!   Q1         Effective mixing ratio at surface (kg kg-1), used for
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:!      KWM:  Set SNCOVR to 1.0 because SNUP is set small in VEGPARM.TBL,
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! SET ICE PACK DEPTH.  USE TBOT AS ICE PACK LOWER BOUNDARY TEMPERATURE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! RECALC/ADJUST THE SOIL HEAT FLUX.  USE THE GRADIENT AND FLUX TO CALC
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! kmh 09/03/2006 use Yen (1981)'s values for Antarctic snow firn
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! CREATE FINITE DIFFERENCE VALUES FOR USE IN ROSR12 ROUTINE
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! CALLING ROUTINE FOR LATER USE.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! EFFECTS CAUSED BY FALLING PRECIPITATION.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! EFFECTIVE SNOW DEPTH.  REVISE THE SKIN TEMP BECAUSE IT WOULD HAVE CHGD
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! EX FOR USE IN SMFLX.  ADJUSTMENT TO T1 TO ACCOUNT FOR SNOW PATCHES.
core_atmosphere/physics/physics_wrf/module_sf_noahlsm_glacial_only.F:! VAPOR PRESSURE) VALUE OF 6.11E+2 USED HERE IS THAT VALID AT FRZZING
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:!               used to couple with TKE scheme
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:        !  Sending array starting locations of optional variables may cause
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:!         SO USE ONLY INTERIOR VALUES OF UX AND VX TO CALCULATE 
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:! QGH CHANGED TO USE LOWEST-LEVEL AIR TEMP CONSISTENT WITH MYJSFC CHANGE
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:!      Use Beljaars over land, old MM5 (Wyngaard) formula over water
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:! Garratt (1992) used with values of k = 0.40, Pr = 0.71, and Sc = 0.60
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:!             If iz0tlnd = 2, use traditional value
core_atmosphere/physics/physics_wrf/module_sf_sfclay.F:! TKE coupling: compute ust without vconv for use in tke scheme
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. while mp_physics=28 uses double-moment cloud droplet number
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. Most importantly, users may wish to modify the prescribed number of
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. users may alter the rain and graupel size distribution parameters
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. to use exponential (Marshal-Palmer) or generalized gamma shape.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. rates.  Users may also alter the constants used for density of rain,
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. users can modify include the constants for mass and/or velocity
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. power law relations and assumed capacitances used in deposition/
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      use mpas_kind_types
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      use mpas_atmphys_functions, only: gammp,wgamma,rslf,rsif
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      use mpas_atmphys_utilities
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      use module_mp_radar
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. droplets use variables (Ef_rw, Ef_sw, Ef_gw respectively) and
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. get computed elsewhere because they are dependent on stokes
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. R1 value, 1.E-12, cannot be set lower because of numerical
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. because of truncation problems in snow/ice growth.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Rho_not used in fallspeed relations (rho_not/rho)**.5 adjustment.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Temperatures (5 C interval 0 to -40) used in lookup tables.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. to 2 for really dirty air.  This not used in 2-moment cloud water
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. scheme and nu_c used instead and varies from 2 to 15 (integer-only).
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Schmidt number to one-third used numerous times.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Bug fix (2016Jun15), prevent use of uninitialized value(s) of snow moments.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Derive various thermodynamic variables frequently used.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate y-intercept, slope, and useful moments for snow.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. then we must compute actual 2nd moment and use as reference.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate 1st moment.  Useful for depositional growth and melting.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s+1 (th) moment.  Useful for diameter calcs.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bv_s+2 (th) moment.  Useful for riming.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate 1+(bv_s+1)/2 (th) moment.  Useful for depositional growth.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. of idx_IN is 1.0 per Liter of air is used when dustyIce flag is
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. dustyIce flag, use the previous Cooper (1986) temperature-dependent
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Some cloud ice needs to move into the snow category.  Use lookup
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. This change will be required if users run adaptive time step that
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. then we must compute actual 2nd moment and use as reference.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s+1 (th) moment.  Useful for diameter calcs.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s+bv_s (th) moment.  Useful for sedimentation.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..regions will not melt as fast because particle temperature stays
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. velocity) and use it to determine if we need to split the timestep
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. uses polynomials to get close match of Pruppacher & Klett Fig 14-9.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      USE module_domain
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:      USE module_dm
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:           'Can not find unused fortran unit to read in lookup table.')
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. updraft velocity could easily be negative, we could use the temp
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!     --- USES GAMMLN
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!     --- USES GAMMLN
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!     --- USES GCF,GSER
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. then we must compute actual 2nd moment and use as reference.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s+1 (th) moment.  Useful for diameter calcs.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. which we treat as water-coated ice spheres and use Uli Blahak's
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate y-intercept, slope, and useful moments for snow.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. then we must compute actual 2nd moment and use as reference.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s+1 (th) moment.  Useful for diameter calcs.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!..Calculate bm_s*2 (th) moment.  Useful for reflectivity.
core_atmosphere/physics/physics_wrf/module_mp_thompson.F:!.. Uses code from Uli Blahak (rayleigh_soak_wetgraupel and supporting
core_atmosphere/physics/physics_wrf/libmassv.F:! no reason why g95 should fail - oh well, we don't use this routine anyways
core_atmosphere/physics/physics_wrf/module_bl_gwdo.F:!    * because the topography variance is zero over ocean points,also check that the variable zlowtop
core_atmosphere/physics/physics_wrf/module_bl_gwdo.F:! ratio const. use simplified relationship between standard            
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use mpas_timer,only: mpas_timer_start,mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F: use module_bl_gwdo
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_gwdo.F:! * change the definition of dx_p to match that used in other physics parameterizations.
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_atmphys_date_time
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_atmphys_constants,only: stbolt
core_atmosphere/physics/mpas_atmphys_update_surface.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_update_surface.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_update_surface.F:! * now use isice and iswater initialized in the init file instead of initialized in mpas_atmphys_landuse.F.
core_atmosphere/physics/mpas_atmphys_update_surface.F:!use all SW flux
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_atmphys_landuse
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_atmphys_lsm_noahinit
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use mpas_constants
core_atmosphere/physics/mpas_atmphys_driver_oml.F: use module_sf_oml
core_atmosphere/physics/mpas_atmphys_functions.F: use mpas_kind_types, only : RKIND
core_atmosphere/physics/mpas_atmphys_functions.F: use mpas_derived_types, only : MPAS_LOG_ERR
core_atmosphere/physics/mpas_atmphys_functions.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_functions.F:!     --- USES GAMMLN
core_atmosphere/physics/mpas_atmphys_functions.F:!     --- USES GAMMLN
core_atmosphere/physics/mpas_atmphys_functions.F:!     --- USES GCF,GSER
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_timekeeping
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_stream_manager
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_atmphys_o3climatology
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_atmphys_update_surface
core_atmosphere/physics/mpas_atmphys_manager.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_manager.F:! physics_run_init   : create and initialize alarms used for physics parameterizations.
core_atmosphere/physics/mpas_atmphys_manager.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_manager.F:    ! If the diagnostic interval is higher in resolution, use it instead
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_atmphys_init_microphysics
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_atmphys_interface
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use module_mp_kessler
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use module_mp_thompson
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use module_mp_wsm6
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_microphysics.F: use mpas_constants, only : rvord
core_atmosphere/physics/mpas_atmphys_date_time.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_date_time.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_date_time.F:! split_date_char       : used to extract actual date from input string.
core_atmosphere/physics/mpas_atmphys_date_time.F:!   It is used in the updated module module_sf_noahdrv.F, but only if we run the urban physics option which we do
core_atmosphere/physics/mpas_atmphys_date_time.F:!   not. So this subroutine is currently not used.
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use mpas_atmphys_constants,only: cp,degrad,ep_2,gravity,R_d,R_v,stbolt
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_camrad_init.F: use module_ra_cam_support
core_atmosphere/physics/mpas_atmphys_camrad_init.F:! * Modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_camrad_init.F:! the radiation scheme uses cgs units.
core_atmosphere/physics/mpas_atmphys_camrad_init.F:! <Describe the algorithm(s) used in the routine.> 
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use shr_kind_mod, only: r8 => shr_kind_r8
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use ppgrid,       only: pver, pverp
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use comozp,       only: cplos, cplol
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use pmgrid,       only: masterproc, plev, plevp
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use radae,        only: radaeini
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!  use physconst,    only: mwdry, mwco2
core_atmosphere/physics/mpas_atmphys_camrad_init.F:!   use mpishorthand
core_atmosphere/physics/mpas_atmphys_camrad_init.F:       call physics_error_fatal('module_ra_cam: radaeinit: Cannot find unused '//&
core_atmosphere/physics/mpas_atmphys_camrad_init.F:! Set up table of H2O saturation vapor pressures for use in calculation effective path RH.  
core_atmosphere/physics/mpas_atmphys_camrad_init.F:! Need separate table from table in wv_saturation because:
core_atmosphere/physics/mpas_atmphys_camrad_init.F:       call physics_error_fatal('module_ra_cam: aer_optics_initialize: Cannot find unused '//&
core_atmosphere/physics/mpas_atmphys_finalize.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_finalize.F: use module_mp_thompson
core_atmosphere/physics/mpas_atmphys_finalize.F:!mpas_atmphys_finalize contains subroutines that deallocate arrays used in physics parameterizations, i.e. arrays
core_atmosphere/physics/mpas_atmphys_finalize.F:!   * added subroutine mp_thompson_deallocate which deallocate arrays used in the initialization of the Thompson
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_atmphys_landuse, only: isurban
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_atmphys_lsm_noahinit
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use module_sf_noahdrv
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use module_sf_noah_seaice_drv
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: use module_sf_sfcdiags
core_atmosphere/physics/mpas_atmphys_driver_lsm.F: logical,parameter:: rdmaxalb = .false. !use snow albedo from geogrid;false use table values
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:! * moved the definition of isurban to landuse_init_forMPAS in mpas_atmphys_landuse.F.
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:!   isurban is now defined as a function of the input landuse data file.
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:!   used in the MYJ PBL parameterization which is not available in MPAS.
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:! * now use isice and iswater initialized in the init file instead of initialized in mpas_atmphys_landuse.F.
core_atmosphere/physics/mpas_atmphys_driver_lsm.F:                usemonalb        = config_sfc_albedo ,                                              &
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_cloudiness
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_convection
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_gwdo
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_lsm
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_pbl
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_radiation_lw
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_radiation_sw 
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_sfclayer
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_driver_oml
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_interface
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_update
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_atmphys_vars, only: l_camlw,l_conv,l_radtlw,l_radtsw
core_atmosphere/physics/mpas_atmphys_driver.F: use mpas_timer
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_cloudiness         : allocate all local arrays used in driver_cloudiness.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_convection         : allocate all local arrays used in driver_convection.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_gwdo               : allocate all local arrays used in driver_gwdo.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_lsm                : allocate all local arrays used in driver_lsm.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_pbl                : allocate all local arrays used in driver_pbl.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_radiation_lw       : allocate all local arrays used in driver_radiation_lw.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_radiation_sw       : allocate all local arrays used in driver_radiation_sw.
core_atmosphere/physics/mpas_atmphys_driver.F:! allocate_sfclayer           : allocate all local arrays used in driver_sfclayer.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_cloudiness       : dedeallocate all local arrays used in driver_cloudiness.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_convection       : deallocate all local arrays used in driver_convection.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_gwdo             : deallocate all local arrays used in driver_gwdo.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_lsm              : deallocate all local arrays used in driver_lsm.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_pbl              : deallocate all local arrays used in driver_pbl.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_radiation_lw     : deallocate all local arrays used in driver_radiation_lw.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_radiation_sw     : deallocate all local arrays used in driver_radiation_sw.
core_atmosphere/physics/mpas_atmphys_driver.F:! deallocate_sfclayer         : deallocate all local arrays used in driver_sfclayer.
core_atmosphere/physics/mpas_atmphys_driver.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use module_bl_mynn
core_atmosphere/physics/mpas_atmphys_driver_pbl.F: use module_bl_ysu
core_atmosphere/physics/mpas_atmphys_driver_pbl.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_pbl.F:! * for the mynn parameterization, change the definition of dx_p to match that used in other physics
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use module_cu_gf
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use module_cu_kfeta
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use module_cu_tiedtke
core_atmosphere/physics/mpas_atmphys_driver_convection.F: use module_cu_ntiedtke
core_atmosphere/physics/mpas_atmphys_driver_convection.F:! * Modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_convection.F:! * for the kain_fritsch parameterization of convection, change the definition of dx_p to match that used in the
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_dmpar
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_derived_types
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_atmphys_constants
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_atmphys_utilities
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use mpas_log, only : mpas_log_write
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F: use module_ra_rrtmg_lw
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:!used in MPAS. It replaces the initialization in module_ra_rrtgm_lw.F.
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:!Perform g-point reduction and other initializations: specific heat of dry air (cp) used in
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:                                'find unused fortran unit to read in lookup table.' )
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:!  spectral bands used in RRTMG_LW.  Here, the data are defined for 16
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:!  the total number of g-points from 256 to 140 for use in the GCM.
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg01, only : fracrefao, fracrefbo, kao, kbo, kao_mn2, kbo_mn2, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg02, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg03, only : fracrefao, fracrefbo, kao, kbo, kao_mn2o, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg04, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg05, only : fracrefao, fracrefbo, kao, kbo, kao_mo3, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg06, only : fracrefao, kao, kao_mco2, selfrefo, forrefo, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg07, only : fracrefao, fracrefbo, kao, kbo, kao_mco2, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg08, only : fracrefao, fracrefbo, kao, kao_mco2, kao_mn2o, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg09, only : fracrefao, fracrefbo, kao, kbo, kao_mn2o, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg10, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg11, only : fracrefao, fracrefbo, kao, kbo, kao_mo2, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg12, only : fracrefao, kao, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg13, only : fracrefao, fracrefbo, kao, kao_mco2, kao_mco, &
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg14, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg15, only : fracrefao, kao, kao_mn2, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_rrtmg_lwinit.F:      use rrlw_kg16, only : fracrefao, fracrefbo, kao, kbo, selfrefo, forrefo
core_atmosphere/physics/mpas_atmphys_update.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_update.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_update.F: use mpas_atmphys_driver_convection
core_atmosphere/physics/mpas_atmphys_update.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_update.F:! physics_update              : not used.
core_atmosphere/physics/mpas_atmphys_update.F:! * modified sourcecode to use pools.
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use mpas_kind_types
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use mpas_pool_routines
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use mpas_timer, only : mpas_timer_start, mpas_timer_stop
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use mpas_atmphys_constants, only: ep_2
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use mpas_atmphys_vars
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F: use module_mp_thompson_cldfra3
core_atmosphere/physics/mpas_atmphys_driver_cloudiness.F:! * modified sourcecode to use pools.
core_atmosphere/Registry.xml:                     description="The number of soil layers used by the land-surface scheme"/>
core_atmosphere/Registry.xml:                     description="Horizontal length scale, used by the Smagorinsky formulation of horizontal diffusion and by 3-d divergence damping"
core_atmosphere/Registry.xml:                     description="Filename used to store most recent restart time stamp"
core_atmosphere/Registry.xml:                     description="Whether to use an explicit mapping of blocks to MPI tasks"
core_atmosphere/Registry.xml:                     description="Whether to re-compute coupled fields $\theta_m$, $\tilde{\rho}$, $\rho u$, etc. from uncoupled fields when restarting the model; used for cycling DA experiments that analyze uncoupled fields in restart files"
core_atmosphere/Registry.xml:                     possible_values="`off' or `on'; `off' turns off IAU, `on' uses equal weighting of increments across the IAU window"/>
core_atmosphere/Registry.xml:                     description="Whether this run is within the JEDI data assimilation framework; used to add temperature and specific humidity as diagnostics"
core_atmosphere/Registry.xml:                     description="Weights used in reconstruction of tangential velocity for an edge"/>
core_atmosphere/Registry.xml:                     description="Mesh density function (used when generating the mesh) evaluated at a cell"/>
core_atmosphere/Registry.xml:                     description="Weighting coefficients used for reconstructing cell-based fields at edges"/>
core_atmosphere/Registry.xml:                     description="Weighting coefficients used for reconstructing cell-based fields at edges"/>
core_atmosphere/Registry.xml:                     description="Cells used to reconstruct a cell-based field at an edge"/>
core_atmosphere/Registry.xml:                     description="Number of cells used to reconstruct a cell-based field at an edge"/>
core_atmosphere/Registry.xml:                <!-- NOTE: added the "r" option to rho,theta,uReconstructZonal,and uReconstructMeridional for use of the -->
core_atmosphere/Registry.xml:                     description="time-averaged rho*u/zz used in scalar transport"/>
core_atmosphere/Registry.xml:                     description="time-averaged rho*omega/zz used in scalar transport"/>
core_atmosphere/Registry.xml:                     description="time-averaged rho*u/zz used in scalar transport"/>
core_atmosphere/Registry.xml:                     description="time-averaged rho*omega/zz used in scalar transport"/>
core_atmosphere/Registry.xml:                     description="old time level values of rho*theta_m/zz perturbation from rtheta_p, used in 3D divergence damping"/>
core_atmosphere/Registry.xml:                     description="flux divergence for rho*theta_m/zz, used in the Tiedtke convective parameterization"/>
core_atmosphere/Registry.xml:                     description="input soil use classification"
core_atmosphere/Registry.xml:                <!-- Monthly mean ozone climatology used in the CAM and RRTMG radiation codes -->
core_atmosphere/Registry.xml:                     description="land use classification"/>
core_atmosphere/utils/build_tables.F: use atmphys_build_tables_thompson
core_atmosphere/utils/atmphys_build_tables_thompson.F: use module_mp_thompson
