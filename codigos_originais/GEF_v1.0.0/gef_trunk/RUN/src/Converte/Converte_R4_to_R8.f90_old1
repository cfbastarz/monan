      PROGRAM CONVERTE_R4_TO_R8
!
      USE ACMCLD
      USE ACMCLH
      USE ACMPRE
      USE ACMRDL
      USE ACMRDS
      USE ACMSFC
      USE CTLBLK
      USE DYNAM
      USE DGNSOUT
      USE HS
      USE LOOPS
      USE MASKS
      USE METRCS
      USE MPPSTAFF
      USE PARMSOIL
      USE PHYS
      USE PVRBLS
      USE SOIL
      USE VRBLS
!      
       IMPLICIT NONE
!
    SAVE
!
!
    REAL   (KIND=R8)                                                                                     ::&
    & DT1      , TSRFC1   , TRDLW1   , TPREC1   , THEAT1      , TCLOD1  , TRDSW1
!
    REAL   (KIND=R8)    , DIMENSION(:)                , ALLOCATABLE                                      ::&
    & DETA1    , RDETA1   , AETA1    , DAETA1   , F4Q2_1     , ETA1     , DFL1     ,KVDT1
!
!
    REAL   (KIND=R8)    , DIMENSION (:,:)             , ALLOCATABLE                                      ::&
    & PD1     , TG1     , SQV1     , SQH1     , Q11_1     , Q12_1     , Q22_1     , QBV11_1    ,           &          
    & QBV12_1 , QBV22_1 , QH11_1   , QH12_1   , QH22_1    , SQV_NORM1 , WPDAR1    , F11_1      ,           &
    & F12_1   , F21_1   , F22_1    , P11_1    , P12_1     , P21_1     , P22_1     , FDIV1      ,           &
    & FDDMP1  , HSINP1  , HCOSP1   , FVDIFF1  , HBMSK1    , GLAT1     , GLON1     , FIS1       ,           &
    & RES1    , LMH1    , LMV1     , SST_1    , EPSR1     , SM1       , SICE1     , SI1        ,           & 
    & SNO1    , VEGFRC1 , IVGTYP1  , ISLTYP1  , ISLOPE1   , ALBEDO1   , MXSNAL1   , ALBASE1    
!
!
    REAL   (KIND=R8)    , DIMENSION (:,:,:)           , ALLOCATABLE                                      ::&
    & T1       , Q1       , U1       , V1      , QD11_1    , QD12_1    , QD21_1    , QD22_1    ,           &
    & KTDT1    , HTM1     , VTM1     , SH2O1   , SMC1      , STC1      , ZEFFIJ1        
!
!
    REAL   (KIND=R8)    , DIMENSION(:,:,:,:)          , ALLOCATABLE                                      ::&
    & QB1
!
!
    REAL   (KIND=R8)    , DIMENSION(:,:,:,:,:)        , ALLOCATABLE                                      ::&
    & QVH1     , QHV1     , QVH2_1   , QHV2_1 , QA1        
!
!
    REAL   (KIND=R8)                                                                                     ::&
    & FADV1    , FADV2_1   , FADT1    , R1       , PT1      , F4D1     , EF4T1    , FKIN1      ,           &
    & FCP1     , DELTY1    , DELTHZ1  , KAPPA1   , P0_1     , RTDF1
!
!
    INTEGER(KIND=I4)                                                                                     ::&
    & I        , I3       , J3       , N         , IX      , IY        , JMIN    , JMAX        ,           & 
    & IMIN     , IMAX     , I5       , J5
!
!
    CHARACTER(LEN=80)                                                                                    ::&
    & CVRBLS   , CVRBLS1  , CCONST   , CCONST1  , CHS      , CHS1     , CSFCETA     , CSFCETA1 ,           &  
    & CDGNS    , CDGNS1
!
!
    INTEGER(KIND=I8)                                                                                     ::&
    & DGNNUM1   , DGNSTR1 , IDGNS1   , ICKMM1   , CKNUM1
!
!
    INTEGER(KIND=I4), PARAMETER                                                                          ::&
    & ILM = (IM - 1)/IXM +1     , JLM = (JM - 1)/JYM +1
!
!    
!
!  CONST
    ALLOCATE (DETA1    (LM))
    ALLOCATE (RDETA1   (LM))
    ALLOCATE (AETA1    (LM))
    ALLOCATE (DAETA1   (LM))
    ALLOCATE (F4Q2_1   (LM))
    ALLOCATE (ETA1     (LM+1))
    ALLOCATE (DFL1     (LM+1))
!
! HS
    ALLOCATE (KVDT1    (LM))
!
! VRBLS
    ALLOCATE (TG1      (0:IM+1, 0:JM+1))
    ALLOCATE (PD1      (0:IM+1, 0:JM+1))
!
! CONST
    ALLOCATE (SQV1     (0:IM+1, 0:JM+1))
    ALLOCATE (SQH1     (0:IM+1, 0:JM+1))
    ALLOCATE (Q11_1    (0:IM+1, 0:JM+1))
    ALLOCATE (Q12_1    (0:IM+1, 0:JM+1))
    ALLOCATE (Q22_1    (0:IM+1, 0:JM+1))
    ALLOCATE (QBV11_1  (0:IM+1, 0:JM+1))
    ALLOCATE (QBV12_1  (0:IM+1, 0:JM+1))
    ALLOCATE (QBV22_1  (0:IM+1, 0:JM+1))
    ALLOCATE (QH11_1   (0:IM+1, 0:JM+1))
    ALLOCATE (QH12_1   (0:IM+1, 0:JM+1))
    ALLOCATE (QH22_1   (0:IM+1, 0:JM+1))
    ALLOCATE (SQV_NORM1(0:IM+1, 0:JM+1))
    ALLOCATE (WPDAR1   (0:IM+1, 0:JM+1))
    ALLOCATE (F11_1    (0:IM+1, 0:JM+1))
    ALLOCATE (F12_1    (0:IM+1, 0:JM+1))
    ALLOCATE (F21_1    (0:IM+1, 0:JM+1))
    ALLOCATE (F22_1    (0:IM+1, 0:JM+1))
    ALLOCATE (P11_1    (0:IM+1, 0:JM+1))
    ALLOCATE (P12_1    (0:IM+1, 0:JM+1))
    ALLOCATE (P21_1    (0:IM+1, 0:JM+1))
    ALLOCATE (P22_1    (0:IM+1, 0:JM+1))
    ALLOCATE (FDIV1    (0:IM+1, 0:JM+1))
    ALLOCATE (FDDMP1   (0:IM+1, 0:JM+1))
    ALLOCATE (HSINP1   (0:IM+1, 0:JM+1))
    ALLOCATE (HCOSP1   (0:IM+1, 0:JM+1))
    ALLOCATE (FVDIFF1  (0:IM+1, 0:JM+1))
    ALLOCATE (HBMSK1   (0:IM+1, 0:JM+1))
    ALLOCATE (GLAT1    (0:IM+1, 0:JM+1))
    ALLOCATE (GLON1    (0:IM+1, 0:JM+1))
!
! SFCETA3
    ALLOCATE (FIS1    (0:IM+1, 0:JM+1))
    ALLOCATE (RES1    (0:IM+1, 0:JM+1))    
    ALLOCATE (LMH1    (0:IM+1, 0:JM+1))
    ALLOCATE (LMV1    (0:IM+1, 0:JM+1))
    ALLOCATE (SST_1   (0:IM+1, 0:JM+1))
    ALLOCATE (EPSR1   (0:IM+1, 0:JM+1))
    ALLOCATE (SM1     (0:IM+1, 0:JM+1))
    ALLOCATE (SICE1   (0:IM+1, 0:JM+1))
    ALLOCATE (SI1     (0:IM+1, 0:JM+1))
    ALLOCATE (SNO1    (0:IM+1, 0:JM+1))
    ALLOCATE (VEGFRC1 (0:IM+1, 0:JM+1))
    ALLOCATE (IVGTYP1 (0:IM+1, 0:JM+1))
    ALLOCATE (ISLTYP1 (0:IM+1, 0:JM+1))
    ALLOCATE (ISLOPE1 (0:IM+1, 0:JM+1))
    ALLOCATE (ALBEDO1 (0:IM+1, 0:JM+1))
    ALLOCATE (MXSNAL1 (0:IM+1, 0:JM+1))
    ALLOCATE (ALBASE1 (0:IM+1, 0:JM+1))
!
! VRBLS
    ALLOCATE (T1       (0:IM+1, 0:JM+1, LM))
    ALLOCATE (Q1       (0:IM+1, 0:JM+1, LM))
    ALLOCATE (U1       (0:IM+1, 0:JM+1, LM))
    ALLOCATE (V1       (0:IM+1, 0:JM+1, LM))
!
! HS
    ALLOCATE (KTDT1    (0:IM+1, 0:JM+1, LM))
!
! CONST
    ALLOCATE (QD11_1   (0:IM+1, 0:JM+1,  4))
    ALLOCATE (QD12_1   (0:IM+1, 0:JM+1,  4))
    ALLOCATE (QD21_1   (0:IM+1, 0:JM+1,  4))
    ALLOCATE (QD22_1   (0:IM+1, 0:JM+1,  4))
!
! SFCETA3
    ALLOCATE (HTM1    (0:IM+1, 0:JM+1, LM))
    ALLOCATE (VTM1    (0:IM+1, 0:JM+1, LM))
    ALLOCATE (SH2O1   (0:IM+1, 0:JM+1, NSOIL))
    ALLOCATE (SMC1    (0:IM+1, 0:JM+1, NSOIL))
    ALLOCATE (STC1    (0:IM+1, 0:JM+1, NSOIL))
    ALLOCATE (ZEFFIJ1 (0:IM+1, 0:JM+1,  4))
!
! CONST
    ALLOCATE (QB1      (0:IM+1, 0:JM+1,  2, 2))
!
! CONST
    ALLOCATE (QVH1     (0:IM+1, 0:JM+1,  4, 2, 2))
    ALLOCATE (QHV1     (0:IM+1, 0:JM+1,  4, 2, 2))
    ALLOCATE (QVH2     (0:IM+1, 0:JM+1,  4, 2, 2))
    ALLOCATE (QVH2_1   (0:IM+1, 0:JM+1,  4, 2, 2))
    ALLOCATE (QHV2_1   (0:IM+1, 0:JM+1,  4, 2, 2))
    ALLOCATE (QA1      (0:IM+1, 0:JM+1, 13, 2, 2))


!GSM   CALL INITMPI
   CALL ALLOC

! NUMBERS
!--------
!GSM    LISTINVRBLS = 10
!GSM    LISTINCONST = 11
!  
!------
! 
!GSM   DO MYPE = 0 , 599
 
!GSM    WRITE(C_MYPE,1000) MYPE
!GSM    1000 FORMAT(I4.4)


    MYPE = 0
      DO N=1,NM
         JMIN = 0
         DO IY = 1,JYM
           JMAX = JMIN + (JLM - 1)
           J5 = JMIN
           IMIN = 0
           DO IX = 1,IXM
             IMAX = IMIN + (ILM -1)
             I5 = IMIN 
!
        WRITE(C_MYPE, 1000) MYPE
 1000    FORMAT(I4.4)


        print*,C_MYPE

!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   VRBLS01 !!!!!!!!!!!!!!!!!!!!!!!!!!

!---------------
! TUPA DIRECTORY
!---------------
    CVRBLS = 'vrbls01.' // C_MYPE
!
    OPEN(LISTINVRBLS, FILE=TRIM(CVRBLS), STATUS='OLD', FORM='UNFORMATTED')
!------------------
! /VRBLS/ DIRECTORY
!------------------
    READ (LISTINVRBLS) PD
    READ (LISTINVRBLS) T 
    READ (LISTINVRBLS) Q 
    READ (LISTINVRBLS) U
    READ (LISTINVRBLS) V
    READ (LISTINVRBLS) TG
!
    CLOSE (LISTINVRBLS)
!
! WRITE FILE  vrbls01_new
!
    CVRBLS1 = 'vrbls01_new.' // C_MYPE
!
    OPEN(LISTINVRBLS, FILE=TRIM(CVRBLS1), STATUS='UNKNOWN', FORM='UNFORMATTED')
!------------------
! /VRBLS1/ DIRECTORY
!------------------
!   
    PD1  = PD
    T1   = T
    Q1   = Q
    U1   = U	    
    V1   = V	    
    TG1  = TG	    
!
    CALL A2AL (PD1, I5, J5, N ,  1, 10)    
    CALL A2AL (T1 , I5, J5, N , LM, 10)
    CALL A2AL (Q1 , I5, J5, N , LM, 10)
    CALL A2AL (U1 , I5, J5, N , LM, 10)
    CALL A2AL (V1 , I5, J5, N , LM, 10)
    CALL A2AL (TG1, I5, J5, N ,  1, 10)
!
!GSM    WRITE (LISTINVRBLS) PD1
!GSM    WRITE (LISTINVRBLS) T1 
!GSM    WRITE (LISTINVRBLS) Q1 
!GSM    WRITE (LISTINVRBLS) U1
!GSM    WRITE (LISTINVRBLS) V1
!GSM    WRITE (LISTINVRBLS) TG1
!    
    CLOSE (LISTINVRBLS)
!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   VRBLS01 !!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   CCONST !!!!!!!!!!!!!!!!!!!!!!!!!!
!---------------
! TUPA DIRECTORY
!---------------
    CCONST = 'const.' // C_MYPE
!
    OPEN(LISTINCONST, FILE=TRIM(CCONST), STATUS='OLD', FORM='UNFORMATTED')
!-------------------
! /METRCS/ DIRECTORY
!-------------------
    READ (LISTINCONST)  SQV
    READ (LISTINCONST)  SQH
    READ (LISTINCONST)  Q11
    READ (LISTINCONST)  Q12
    READ (LISTINCONST)  Q22
    READ (LISTINCONST)  QH11
    READ (LISTINCONST)  QH12
    READ (LISTINCONST)  QH22
    READ (LISTINCONST)  SQV_NORM
    
    SQV1       = SQV
    SQH1       = SQH
    Q11_1      = Q11
    Q12_1      = Q12
    Q22_1      = Q22
    QH11_1     = QH11
    QH12_1     = QH12
    QH22_1     = QH22
    SQV_NORM1  = SQV_NORM
!
!
    DO I=1,4
	READ(LISTINCONST) QD11(:, :, I)
	READ(LISTINCONST) QD12(:, :, I)
	READ(LISTINCONST) QD21(:, :, I)
	READ(LISTINCONST) QD22(:, :, I)

    QD11_1 (:, :, I) = QD11 (:, :, I)
    QD12_1 (:, :, I) = QD12 (:, :, I)
    QD21_1 (:, :, I) = QD21 (:, :, I)
    QD22_1 (:, :, I) = QD22 (:, :, I)

    END DO
!
    DO I =1,4
	DO I3=1,2
	    DO J3=1,2
		READ(LISTINCONST) QVH (:, :, I, I3, J3)
		READ(LISTINCONST) QHV (:, :, I, I3, J3)
		READ(LISTINCONST) QVH2(:, :, I, I3, J3)
		READ(LISTINCONST) QHV2(:, :, I, I3, J3)

	    QVH1   (:, :, I, I3, J3) = QVH  (:, :, I, I3, J3)  
	    QHV1   (:, :, I, I3, J3) = QHV  (:, :, I, I3, J3) 
	    QVH2_1 (:, :, I, I3, J3) = QVH2 (:, :, I, I3, J3)
	    QHV2_1 (:, :, I, I3, J3) = QHV2 (:, :, I, I3, J3)

	    END DO
	END DO
    END DO

    DO I3=1,2
	DO J3=1,2
!
	    DO I=1,13
		READ(LISTINCONST) QA(:, :, I, I3, J3)

		QA1 (:, :, I, I3, J3) = QA (:, :, I, I3, J3)

	    END DO
!
	    READ(LISTINCONST) QB(:, :, I3, J3)

	    QB1 (:, :, I3, J3) = QB (:, :, I3, J3)

	END DO
    END DO
!------------------
! /DYNAM/ DIRECTORY
!------------------
    READ(LISTINCONST) QBV11
    READ(LISTINCONST) QBV12
    READ(LISTINCONST) QBV22
    READ(LISTINCONST) WPDAR
    READ(LISTINCONST) F11  
    READ(LISTINCONST) F12  
    READ(LISTINCONST) F21  
    READ(LISTINCONST) F22  
    READ(LISTINCONST) P11  
    READ(LISTINCONST) P12  
    READ(LISTINCONST) P21  
    READ(LISTINCONST) P22  
    READ(LISTINCONST) FDIV 
    READ(LISTINCONST) FDDMP
    READ(LISTINCONST) HSINP
    READ(LISTINCONST) HCOSP
    READ(LISTINCONST) GLON
    READ(LISTINCONST) GLAT
    READ(LISTINCONST) FVDIFF
    READ(LISTINCONST) HBMSK


    QBV11_1  = QBV11
    QBV12_1  = QBV12
    QBV22_1  = QBV22
    WPDAR1   = WPDAR
    F11_1    = F11
    F12_1    = F12
    F21_1    = F21
    F22_1    = F22
    P11_1    = P11
    P12_1    = P12
    P21_1    = P21
    P22_1    = P22
    FDIV1    = FDIV
    FDDMP1   = FDDMP
    HSINP1   = HSINP
    HCOSP1   = HCOSP
    GLON1    = GLON
    GLAT1    = GLAT
    FVDIFF1  = FVDIFF
    HBMSK1   = HBMSK
    
!
    READ(LISTINCONST) DETA	  , RDETA   , AETA    , DAETA	, ETA	  , DFL     , FADV    ,   &
    &		      FADV2	  , FADT    , R       , PT	, F4D	  , F4Q2    , EF4T    ,   &
    &		      FKIN	  , FCP     , DELTY   , DELTHZ  , KAPPA   , P0      , RTDF

      DETA1    = DETA
      RDETA1   = RDETA
      AETA1    = AETA
      DAETA1   = DAETA
      ETA1     = ETA
      DFL1     = DFL
      FADV1    = FADV
      FADV2_1  = FADV2
      FADT1    = FADT
      R1       = R
      PT1      = PT
      F4D1     = F4D
      F4Q2_1   = F4Q2
      EF4T1    = EF4T
      FKIN1    = FKIN
      FCP1     = FCP
      DELTY1   = DELTY         
      DELTHZ1  = DELTHZ      
      KAPPA1   = KAPPA   
      P0_1     = P0 
      RTDF1    = RTDF	  
!
!
!-------------------
! /CTLBLK/ DIRECTORY
!-------------------
    READ(LISTINCONST)	DT	  , IDAT    , IHRST  , NFCST	, NBC	  , LIST    , IOUT    ,   &
    &			NTSD	  , NTSTM   , NDDAMP , NPREC	, IDTAD   , NBOCO   , NSHDE   ,   &
    &			NCP	  , NPHS    , NCNVC  , NRADS	, NRADL   , NTDDMP  , RUN     ,   &
    &			FIRST	  , RESTRT  , SIGMA  , SUBPOST  , LCORNERM, OUTSTR  , NDASSIM ,   &
    &			NDASSIMM

    
    DT1        = DT
!
!
    CLOSE (LISTINCONST)

! WRITE FILE  const_new

!---------------
! TUPA DIRECTORY
!---------------
    CCONST1 = 'const_new.' // C_MYPE
!
    OPEN(LISTINCONST, FILE=TRIM(CCONST1), STATUS='UNKNOWN', FORM='UNFORMATTED')
!-------------------
! /METRCS/ DIRECTORY
!-------------------
    CALL A2AL (SQV1     , I5, J5, N, 1, 11)
    CALL A2AL (SQH1     , I5, J5, N, 1, 11)
    CALL A2AL (Q11_1    , I5, J5, N, 1, 11)
    CALL A2AL (Q12_1    , I5, J5, N, 1, 11)
    CALL A2AL (Q22_1    , I5, J5, N, 1, 11)
    CALL A2AL (QH11_1   , I5, J5, N, 1, 11)
    CALL A2AL (QH12_1   , I5, J5, N, 1, 11)
    CALL A2AL (QH22_1   , I5, J5, N, 1, 11)    
    CALL A2AL (SQV_NORM1, I5, J5, N, 1, 11)
        
!GSM    WRITE (LISTINCONST)  SQV1
!GSM    WRITE (LISTINCONST)  SQH1
!GSM    WRITE (LISTINCONST)  Q11_1
!GSM    WRITE (LISTINCONST)  Q12_1
!GSM    WRITE (LISTINCONST)  Q22_1
!GSM    WRITE (LISTINCONST)  QH11_1
!GSM    WRITE (LISTINCONST)  QH12_1
!GSM    WRITE (LISTINCONST)  QH22_1
!GSM    WRITE (LISTINCONST)  SQV_NORM1
!
    DO I=1,4
        CALL A2AL (QD11_1(:, :, :, I) , I5, J5, N, 1, 11)
        CALL A2AL (QD12_1(:, :, :, I) , I5, J5, N, 1, 11)
        CALL A2AL (QD21_1(:, :, :, I) , I5, J5, N, 1, 11)
        CALL A2AL (QD22_1(:, :, :, I) , I5, J5, N, 1, 11)
!GSM	WRITE(LISTINCONST) QD11_1(:, :, I)
!GSM	WRITE(LISTINCONST) QD12_1(:, :, I)
!GSM	WRITE(LISTINCONST) QD21_1(:, :, I)
!GSM	WRITE(LISTINCONST) QD22_1(:, :, I)
    END DO
!
    DO I =1,4
	DO I3=1,2
	    DO J3=1,2
                CALL A2AL (QVH1   (:, :, :, I, I3, J3) , I5, J5, N, 1, 11)
                CALL A2AL (QHV1   (:, :, :, I, I3, J3) , I5, J5, N, 1, 11)
                CALL A2AL (QVH2_1 (:, :, :, I, I3, J3) , I5, J5, N, 1, 11)
                CALL A2AL (QHV2_1 (:, :, :, I, I3, J3) , I5, J5, N, 1, 11)
!GSM            WRITE(LISTINCONST) QVH1 (:, :, I, I3, J3)
!GSM            WRITE(LISTINCONST) QHV1 (:, :, I, I3, J3)
!GSM            WRITE(LISTINCONST) QVH2_1(:, :, I, I3, J3)
!GSM            WRITE(LISTINCONST) QHV2_1(:, :, I, I3, J3)
	    END DO
	END DO
    END DO
!
    DO I3=1,2
	DO J3=1,2
!
	    DO I=1,13
                CALL A2AL (QA1   (:, :, :, I, I3, J3) , I5, J5, N, 1, 11)
!GSM		WRITE(LISTINCONST) QA1(:, :, I, I3, J3)
	    END DO
!
                CALL A2AL (QB1   (:, :, :, I3, J3) , I5, J5, N, 1, 11)
!GSM	    WRITE(LISTINCONST) QB1(:, :, I3, J3)
	END DO
    END DO
!------------------
! /DYNAM/ DIRECTORY
!------------------
    WRITE(LISTINCONST) QBV11_1
    WRITE(LISTINCONST) QBV12_1
    WRITE(LISTINCONST) QBV22_1
    WRITE(LISTINCONST) WPDAR1
    WRITE(LISTINCONST) F11_1  
    WRITE(LISTINCONST) F12_1  
    WRITE(LISTINCONST) F21_1  
    WRITE(LISTINCONST) F22_1  
    WRITE(LISTINCONST) P11_1  
    WRITE(LISTINCONST) P12_1  
    WRITE(LISTINCONST) P21_1  
    WRITE(LISTINCONST) P22_1  
    WRITE(LISTINCONST) FDIV1 
    WRITE(LISTINCONST) FDDMP1
    WRITE(LISTINCONST) HSINP1
    WRITE(LISTINCONST) HCOSP1
    WRITE(LISTINCONST) GLON1
    WRITE(LISTINCONST) GLAT1
    WRITE(LISTINCONST) FVDIFF1
    WRITE(LISTINCONST) HBMSK1
!
    WRITE(LISTINCONST) DETA1	     , RDETA1	, AETA1    , DAETA1   , ETA1	 , DFL1      , FADV1  ,   &
    &		       FADV2_1       , FADT1	, R1	   , PT1      , F4D1	 , F4Q2_1    , EF4T1  ,   &
    &		       FKIN1	     , FCP1	, DELTY1   , DELTHZ1  , KAPPA1   , P0_1      , RTDF1
!
!-------------------
! /CTLBLK/ DIRECTORY
!-------------------
    WRITE(LISTINCONST)  DT1	    , IDAT    , IHRST  , NFCST    , NBC      , LIST    , IOUT	 ,   &
    &			NTSD	    , NTSTM   , NDDAMP , NPREC    , IDTAD    , NBOCO   , NSHDE   ,   &
    &			NCP	    , NPHS    , NCNVC  , NRADS    , NRADL    , NTDDMP  , RUN	 ,   &
    &			FIRST	    , RESTRT  , SIGMA  , SUBPOST  , LCORNERM , OUTSTR  , NDASSIM ,   &
    &			NDASSIMM
!
    CLOSE (LISTINCONST)
!
!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   CCONST !!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   HS !!!!!!!!!!!!!!!!!!!!!!!!!!

    CHS = 'hs.' // C_MYPE
!
    OPEN (21, FILE=CHS, STATUS='OLD', FORM='UNFORMATTED')
    READ(21) KVDT
    READ(21) KTDT
!
    KVDT1 = KVDT
    KTDT1 = KTDT
!
    CLOSE (21)
!
! WRITE FILE  hs_new
!
    CHS1 = 'hs_new.' // C_MYPE
!
    OPEN (21, FILE=CHS1, STATUS='UNKNOWN', FORM='UNFORMATTED')
    WRITE(21) KVDT1
!    
    CALL A2AL(KTDT1, I5, J5, N, LM, 21)   
!    
    WRITE(21) KTDT1
!
    CLOSE (21)
!
!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   HS !!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   DGNS !!!!!!!!!!!!!!!!!!!!!!!!!!

    CDGNS = 'dgns.' // C_MYPE  
!
    OPEN (21, FILE=CDGNS, STATUS='OLD', FORM='UNFORMATTED')  
    READ(21)  DGNNUM	, DGNSTR  , IDGNS   , ICKMM  
!
    DGNNUM1 = DGNNUM
    DGNSTR1 = DGNSTR
    IDGNS1  = IDGNS
    ICKMM1  = ICKMM
!    
!
    CLOSE (21)
!
!
! WRITE FILE  dgns_new
!
!
    CDGNS = 'dgns_new.' // C_MYPE  
!
    OPEN (21, FILE=CDGNS, STATUS='UNKNOWN', FORM='UNFORMATTED')  
    WRITE(21)  DGNNUM1    , DGNSTR1  , IDGNS1	, ICKMM1  
!
    CLOSE (21)


!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   DGNS !!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   SFCETA3 !!!!!!!!!!!!!!!!!!!!!!!!!!
!  
    CSFCETA = 'sfceta3.' // C_MYPE
!
    OPEN (21, FILE=CSFCETA, STATUS='OLD', FORM='UNFORMATTED')  
    READ(21) FIS	   
    READ(21) RES	  
    READ(21) HTM     !    SFCETA(OUT4MPI.F90)
    READ(21) VTM      
    READ(21) LMH     
    READ(21) LMV     
    READ(21) SST     
    READ(21) EPSR    
    READ(21) SM      
    READ(21) SICE     
    READ(21) SI       
    READ(21) SNO      
    READ(21) VEGFRC  !   SFCETA2(OUT4MPI.F90)
    READ(21) IVGTYP  
    READ(21) ISLTYP  
    READ(21) ISLOPE  
    READ(21) SH2O    
    READ(21) ALBEDO  
    READ(21) ALBASE  
    READ(21) MXSNAL  
    READ(21) SMC     
    READ(21) STC     !  INIT_OUT(OUT4MPI.F90)	
    READ(21) ZEFFIJ  !      ZEFF(OUT4MPI.F90)
!
    FIS1     = FIS
    RES1     = RES
    HTM1     = HTM
    VTM1     = VTM
    LMH1     = LMH
    LMV1     = LMV
    SST_1    = SST
    EPSR1    = EPSR
    SM1      = SM
    SICE1    = SICE
    SI1      = SI
    SNO1     = SNO
    VEGFRC1  = VEGFRC
    IVGTYP1  = IVGTYP
    ISLTYP1  = ISLTYP
    ISLOPE1  = ISLOPE
    SH2O1    = SH2O
    ALBEDO1  = ALBEDO1
    ALBASE1  = ALBASE
    MXSNAL1  = MXSNAL
    SMC1     = SMC
    STC1     = STC
    ZEFFIJ   = ZEFFIJ
!    
    CLOSE (21)
!
!
! WRITE FILE  sfceta3_new
!
!  
    CSFCETA1 = 'sfceta3_new.' // C_MYPE
!
    OPEN (21, FILE=CSFCETA1, STATUS='UNKNOWN', FORM='UNFORMATTED')  



    CALL A2AL(FIS1   , I5, J5, N,  1, 21)
    CALL A2AL(RES1   , I5, J5, N,  1, 21)
    CALL A2AL(HTM1   , I5, J5, N, LM, 21)
    CALL A2AL(VTM1   , I5, J5, N, LM, 21)
    CALL A2AL(LMH1   , I5, J5, N,  1, 21)
    CALL A2AL(LMV1   , I5, J5, N,  1, 21)
    CALL A2AL(SST_1  , I5, J5, N,  1, 21)
    CALL A2AL(EPSR1  , I5, J5, N,  1, 21)
    CALL A2AL(SM1    , I5, J5, N,  1, 21)
    CALL A2AL(SICE1  , I5, J5, N,  1, 21)
    CALL A2AL(SI1    , I5, J5, N,  1, 21)
    CALL A2AL(SNO1   , I5, J5, N,  1, 21)
    CALL A2AL(VEGFRC1, I5, J5, N,  1, 21)
    CALL A2AL(IVGTYP1, I5, J5, N,  1, 21)
    CALL A2AL(ISLTYP1, I5, J5, N,  1, 21)
    CALL A2AL(ISLOPE1, I5, J5, N,  1, 21)
    CALL A2AL(SH2O1  , I5, J5, N,  4, 21)
    CALL A2AL(ALBEDO1, I5, J5, N,  1, 21)
    CALL A2AL(ALBASE1, I5, J5, N,  1, 21)
    CALL A2AL(MXSNAL1, I5, J5, N,  1, 21)
    CALL A2AL(SMC1   , I5, J5, N,  4, 21)
    CALL A2AL(STC1   , I5, J5, N,  4, 21)
    CALL A2AL(ZEFFIJ1, I5, J5, N,  4, 21)
!
!GSM    WRITE(21) FIS1	     
!GSM    WRITE(21) RES1	    
!GSM    WRITE(21) HTM1     !    SFCETA(OUT4MPI.F90)
!GSM    WRITE(21) VTM1     
!GSM    WRITE(21) LMH1     
!GSM    WRITE(21) LMV1     
!GSM    WRITE(21) SST_1	
!GSM    WRITE(21) EPSR1    
!GSM    WRITE(21) SM1      
!GSM    WRITE(21) SICE1	
!GSM    WRITE(21) SI1	
!GSM    WRITE(21) SNO1	
!GSM    WRITE(21) VEGFRC1  !   SFCETA2(OUT4MPI.F90)
!GSM    WRITE(21) IVGTYP1  
!GSM    WRITE(21) ISLTYP1  
!GSM    WRITE(21) ISLOPE1  
!GSM    WRITE(21) SH2O1    
!GSM    WRITE(21) ALBEDO1  
!GSM    WRITE(21) ALBASE1  
!GSM    WRITE(21) MXSNAL1  
!GSM    WRITE(21) SMC1     
!GSM    WRITE(21) STC1     !  INIT_OUT(OUT4MPI.F90)   
!GSM    WRITE(21) ZEFFIJ1  !      ZEFF(OUT4MPI.F90)


    CLOSE (21)
!

!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   SFCETA3 !!!!!!!!!!!!!!!!!!!!!!!!!!



!!!!!!!!!!!!!!!!!!!!!!! READ/WRITE   FCSTDATA !!!!!!!!!!!!!!!!!!!!!!!!!!

!GSM    CDGNS = 'fcstdata.' // C_MYPE
!  
!GSM    OPEN(21, FILE=CDGNS, FORM='UNFORMATTED')  
!
!GSM    READ(21) TPREC, THEAT, TCLOD, TRDSW, TRDLW, TSRFC

!GSM    TPREC1 = TPREC
!GSM    THEAT1 = THEAT
!GSM    TCLOD1 = TCLOD
!GSM    TRDSW1 = TRDSW
!GSM    TRDLW1 = TRDLW
!GSM    TSRFC1 = TSRFC

!GSM    CLOSE (21)

! WRITE FILE  fcstdata_new

!GSM    CDGNS1 = 'fcstdata_new.' // C_MYPE
!  
!GSM    OPEN(21, FILE=CDGNS1, FORM='UNFORMATTED')  
!
!GSM    WRITE(21) TPREC1, THEAT1, TCLOD1, TRDSW1, TRDLW1, TSRFC1
!
!GSM    CLOSE (21)


!GSM   END DO

           IMIN = IMAX
           MYPE = MYPE + 1
           ENDDO
         JMIN = JMAX
         ENDDO
      ENDDO

END 

!&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&
 SUBROUTINE A2AL (A,IMIN,JMIN,N,LM,LIST)
!*************************************************************************
!                                                                        *
!     DECOMPOSE GLOBAL ARRAY AND OUTPUT RESULT                           *
!                                                                        *
!*************************************************************************
!      
    USE PARMETA
!     
    IMPLICIT NONE
!
!
    INTEGER                                               ::&
    & I        , JMIN    , JMAX        , IMIN     ,         &
    & IMAX     , N       , L           , J        ,         & 
    & IL       , JL      , LIST    
!
!
    INTEGER, PARAMETER                                    :: LM   = 38
    INTEGER, PARAMETER                                    :: ILM = (IM - 1)/IXM +1 , JLM = (JM - 1)/JYM +1
!
    REAL, DIMENSION (0:IM+1,0:JM+1,NM,LM), INTENT (IN)    :: A
    REAL, DIMENSION (0:ILM+1,0:JLM+1,LM)                  :: AL
!------------------------------------------------------------------------
    DO L=1,LM
         J = JMIN
       DO JL = 0,JLM+1
          I = IMIN
         DO IL = 0,ILM+1
           AL(IL,JL,L) = A(I,J,N,L)
           I = I + 1
         END DO
          J = J + 1
       END DO
    END DO
!
    WRITE(LIST) AL
!------------------------------------------------------------------------
END SUBROUTINE A2AL














     
      
      
      
      
      
      
      
      
   
